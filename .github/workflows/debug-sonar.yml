name: Debug SonarQube

on:
  push:
    branches:
      - quality-gate

jobs:
  debug:
    name: Debug SonarQube Setup
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Check environment
        shell: powershell
        run: |
          Write-Host "=== Environment Check ==="
          Write-Host "SONAR_TOKEN exists: ${{ secrets.SONAR_TOKEN != '' }}"
          Write-Host "Current directory: $(Get-Location)"
          Write-Host "Files in current directory:"
          Get-ChildItem | ForEach-Object { Write-Host "  $($_.Name)" }
          
      - name: Check sonar-project.properties
        shell: powershell
        run: |
          Write-Host "=== SonarQube Config Check ==="
          if (Test-Path "sonar-project.properties") {
            Write-Host "sonar-project.properties found:"
            Get-Content "sonar-project.properties"
          } else {
            Write-Host "ERROR: sonar-project.properties not found!"
          }
          
      - name: Install SonarQube Scanner
        shell: powershell
        run: |
          Write-Host "=== Installing SonarQube Scanner ==="
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner --version
          
      - name: Test SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          Write-Host "=== Testing SonarQube Scanner ==="
          Write-Host "Token length: $(${{ secrets.SONAR_TOKEN }}.Length)"
          
          # Test begin command
          Write-Host "Testing begin command..."
          dotnet sonarscanner begin /k:"DreamFog20_HCM25_CPL_NET_05" /o:"dreamfog20" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          
          # Test end command
          Write-Host "Testing end command..."
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          
          Write-Host "SonarQube scanner test completed" 