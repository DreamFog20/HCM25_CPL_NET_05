@model MovieTheater.ViewModels.PromotionViewModel

@{
    ViewData["Title"] = "Create Promotion";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Create New Promotion</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" enctype="multipart/form-data" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="form-group mb-3">
                            <label asp-for="Title" class="control-label"></label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Detail" class="control-label"></label>
                            <textarea asp-for="Detail" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Detail" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="DiscountLevel" class="control-label"></label>
                            <input asp-for="DiscountLevel" class="form-control" type="number" min="1" max="100" />
                            <span asp-validation-for="DiscountLevel" class="text-danger"></span>
                        </div>

                        <!-- Promotion Conditions Section -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h5 class="mb-0">Promotion Conditions (Optional)</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="TargetField" class="control-label"> Promotion type</label>
                                            <select asp-for="TargetField" class="form-control" id="TargetField">
                                                <option value="">-- Select Table --</option>
                                                <option value="Account">Account</option>
                                                <option value="Invoice">booking</option>
                                                <option value="Member">Member</option>
                                                <option value="Movie">Movie</option>
                                                <option value="SeatType">SeatType</option>
                                                <option value="Type">MovieType</option>
                                                <option value="Food">Food</option>
                                            </select>
                                            <span asp-validation-for="TargetField" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="Operator" class="control-label">Operator</label>
                                            <select asp-for="Operator" class="form-control">
                                                <option value="">-- Select Operator --</option>
                                                <option value=">">&gt; greater</option>
                                                <option value=">=">&gt;= greater or equal</option>
                                                <option value="<">&lt; less</option>
                                                <option value="<=">&lt;= less or equal</option>
                                                <option value="=">= equal</option>
                                                <option value="+">+ add</option>
                                                <option value="-">- minus</option>
                                                <option value="*">* multiply</option>
                                                <option value="/">/ divide</option>
                                            </select>
                                            <span asp-validation-for="Operator" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="TargetFieldColumn" class="control-label">Target Field Column</label>
                                    <select asp-for="TargetFieldColumn" class="form-control" id="TargetFieldColumn">
                                        <option value="">-- Select Column --</option>
                                    </select>
                                    <span asp-validation-for="TargetFieldColumn" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="TargetValue" class="control-label">Target Value</label>
                                    <input asp-for="TargetValue" class="form-control" type="text" />
                                    <span asp-validation-for="TargetValue" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="StartTime" class="control-label"></label>
                                    <input asp-for="StartTime" class="form-control" type="datetime-local" />
                                    <span asp-validation-for="StartTime" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="EndTime" class="control-label"></label>
                                    <input asp-for="EndTime" class="form-control" type="datetime-local" />
                                    <span asp-validation-for="EndTime" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Image" class="control-label">Promotion Image</label>
                            <input type="file" name="imageFile" class="form-control" accept="image/*" />
                        </div>

                        <div class="form-group mb-3">
                            <div class="form-check">
                                <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                <label asp-for="IsActive" class="form-check-label"></label>
                            </div>
                        </div>

                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Create Promotion</button>
                            <a asp-action="MainPage" asp-controller="Admin" asp-route-tab="PromotionMg" class="btn btn-secondary">Back to List</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Set min date for EndTime based on StartTime
        document.getElementById('StartTime').addEventListener('change', function () {
            document.getElementById('EndTime').min = this.value;
        });

        // Table columns mapping (update as needed)
        const tableColumns = {
            Account: [ "Address", "DateOfBirth", "Email", "Gender",  "PhoneNumber", "RegisterDate", "RoleId", "Status", "RankId"],
            Invoice: [ "AddScore", "BookingDate", "MovieName", "ScheduleShow", "ScheduleShowTime", "Status", "TotalMoney", "UseScore", "Seat", "AccountId"],
            Member: [ "Score", "AccountId"],
            Movie: [ "Actor", "CinemaRoomId", "Content", "Director", "Duration", "FromDate", "MovieProductionCompany", "ToDate", "Version", "MovieNameEnglish", "MovieNameVn", "LargeImage", "SmallImage", "TrailerUrl"],
            SeatType: ["TypeName", "PricePercent", "ColorHex"],
            Type: [ "TypeName"],
            Food: [ "FoodName", "Price", "Status", "Category"]
        };

        // Column type mapping for all tables and columns
        const columnTypes = {
            Account: {
                Address: "string",
                DateOfBirth: "date",
                Email: "string",
                Gender: "string",
                PhoneNumber: "string",
                RegisterDate: "date",
                RoleId: "number",
                Status: "number",
                RankId: "number"
            },
            Invoice: {
                AddScore: "number",
                BookingDate: "date",
                MovieName: "string",
                ScheduleShow: "date",
                ScheduleShowTime: "string",
                Status: "number",
                TotalMoney: "number",
                UseScore: "number",
                Seat: "string",
                AccountId: "string"
            },
            Member: {
                Score: "number",
                AccountId: "string"
            },
            Movie: {
                Actor: "string",
                CinemaRoomId: "number",
                Content: "string",
                Director: "string",
                Duration: "number",
                FromDate: "date",
                MovieProductionCompany: "string",
                ToDate: "date",
                Version: "string",
                MovieNameEnglish: "string",
                MovieNameVn: "string",
                LargeImage: "string",
                SmallImage: "string",
                TrailerUrl: "string"
            },
            SeatType: {
                TypeName: "string",
                PricePercent: "number",
                ColorHex: "string"
            },
            Type: {
                TypeName: "string"
            },
            Food: {
                FoodName: "string",
                Price: "number",
                Status: "number",
                Category: "string"
            }
        };

        document.getElementById('TargetField').addEventListener('change', function () {
            const table = this.value;
            const columnSelect = document.getElementById('TargetFieldColumn');
            columnSelect.innerHTML = '<option value="">-- Select Column --</option>';
            if (tableColumns[table]) {
                tableColumns[table].forEach(function (col) {
                    const option = document.createElement('option');
                    option.value = col;
                    option.text = col;
                    columnSelect.appendChild(option);
                });
            }
        });

        // Change TargetValue input type and restrict operator for string columns
        document.getElementById('TargetFieldColumn').addEventListener('change', function () {
            const table = document.getElementById('TargetField').value;
            const column = this.value;
            const type = columnTypes[table]?.[column] || "string";
            const targetValueInput = document.querySelector('input[name="TargetValue"]');
            const operatorSelect = document.querySelector('select[name="Operator"]');
            if (targetValueInput) {
                if (type === "date") {
                    targetValueInput.type = "date";
                } else if (type === "number") {
                    targetValueInput.type = "number";
                } else {
                    targetValueInput.type = "text";
                }
                targetValueInput.value = ""; // clear previous value
            }
            // Allow all operators for all types
            if (operatorSelect) {
                for (let i = 0; i < operatorSelect.options.length; i++) {
                    let opt = operatorSelect.options[i];
                    opt.disabled = false;
                    opt.style.display = '';
                }
            }
        });

        // On form submit, format date as dd/MM/yyyy if needed
        document.querySelector('form[asp-action="Create"]').addEventListener('submit', function (e) {
            const table = document.getElementById('TargetField').value;
            const column = document.getElementById('TargetFieldColumn').value;
            const type = columnTypes[table]?.[column] || "string";
            const targetValueInput = document.querySelector('input[name="TargetValue"]');
            if (type === "date" && targetValueInput && targetValueInput.value) {
                const date = new Date(targetValueInput.value);
                const day = String(date.getDate()).padStart(2, '0');
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const year = date.getFullYear();
                targetValueInput.value = `${day}/${month}/${year}`;
            }
        });
    </script>
} 