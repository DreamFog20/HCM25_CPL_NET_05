@model MovieTheater.ViewModels.ForgetPasswordViewModel
@{
    ViewData["Title"] = "Quên Mật Khẩu";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - FPT 777 Cinema</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #0f172a 0%, #581c87 50%, #0f172a 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }

        .forget-password-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-radius: 1.5rem;
            padding: 3rem;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 500px;
            position: relative;
        }

        .forget-password-container::before {
            content: '';
            position: absolute;
            inset: 0;
            background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
            opacity: 0.2;
            border-radius: 1.5rem;
        }

        .header {
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
            z-index: 10;
        }

        .logo-container {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1.5rem;
        }

        .logo-image {
            height: 60px;
            width: auto;
            filter: drop-shadow(0 8px 20px rgba(255, 224, 102, 0.4));
            transition: all 0.3s ease;
        }

        .logo-image:hover {
            transform: scale(1.05);
            filter: drop-shadow(0 12px 25px rgba(255, 224, 102, 0.6));
        }

        .title {
            font-size: 1.75rem;
            font-weight: 700;
            color: white;
            margin-bottom: 0.5rem;
        }

        .subtitle {
            color: #94a3b8;
            font-size: 1rem;
            line-height: 1.6;
        }

        .form-container {
            position: relative;
            z-index: 10;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-size: 0.875rem;
            font-weight: 500;
            color: #e2e8f0;
            margin-bottom: 0.5rem;
        }

        .form-input {
            width: 100%;
            height: 3rem;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 0.75rem;
            padding: 0 1rem;
            color: white;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-input::placeholder {
            color: #94a3b8;
        }

        .form-input:focus {
            outline: none;
            border-color: #fbbf24;
            box-shadow: 0 0 0 3px rgba(251, 191, 36, 0.1);
        }

        .form-input.input-validation-error {
            border-color: #ef4444;
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
        }

        .validation-error {
            color: #ef4444;
            font-size: 0.75rem;
            margin-top: 0.25rem;
            display: block;
            opacity: 0;
            transform: translateY(-5px);
            transition: all 0.3s ease;
        }

        .validation-error.field-validation-error {
            opacity: 1;
            transform: translateY(0);
        }

        .submit-btn {
            width: 100%;
            height: 3rem;
            background: linear-gradient(135deg, #ffe66d 0%, #524a0e 100%);
            border: none;
            border-radius: 0.75rem;
            color: white;
            font-weight: 600;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            box-shadow: 0 4px 15px rgba(168, 85, 247, 0.4);
            margin-top: 1rem;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(168, 85, 247, 0.6);
        }

        .submit-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .loading-spinner {
            width: 1.25rem;
            height: 1.25rem;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .back-link {
            text-align: center;
            margin-top: 1.5rem;
        }

        .back-link a {
            color: #fbbf24;
            text-decoration: none;
            font-size: 0.875rem;
            transition: color 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .back-link a:hover {
            color: #c084fc;
        }

        .alert {
            padding: 1rem;
            border-radius: 0.75rem;
            margin-bottom: 1.5rem;
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .alert-success {
            background: rgba(16, 185, 129, 0.1);
            border: 1px solid rgba(16, 185, 129, 0.3);
            color: #10b981;
        }

        .alert-danger {
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid rgba(239, 68, 68, 0.3);
            color: #ef4444;
        }

        .alert i {
            font-size: 1rem;
        }

        @@media (max-width: 768px) {
            body {
                padding: 1rem;
            }

            .forget-password-container {
                padding: 2rem;
            }

            .title {
                font-size: 1.5rem;
            }

            .logo-image {
                height: 50px;
            }
        }
    </style>
</head>
<body>
    <div class="forget-password-container">
        <div class="header">
            <div class="logo-container">
                <img src="~/image/logo.png" alt="FPT 777 Logo" class="logo-image">
            </div>
            <h1 class="title">Quên Mật Khẩu</h1>
            <p class="subtitle">Nhập email của bạn để nhận mã OTP đặt lại mật khẩu</p>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                <i class="fas fa-check-circle"></i>
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-circle"></i>
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="form-container">
            <form asp-action="ForgetPassword" method="post" id="forgetPasswordForm">
                <div class="form-group">
                    <label class="form-label">Email</label>
                    <input type="email" class="form-input" asp-for="Email" placeholder="Nhập email của bạn" required />
                    <span asp-validation-for="Email" class="validation-error"></span>
                </div>

                <button type="submit" class="submit-btn" id="submitBtn">
                    <span id="submitText">Gửi Mã OTP</span>
                    <i class="fas fa-paper-plane" id="submitIcon"></i>
                </button>
            </form>

            <div class="back-link">
                <a href="@Url.Action("Login", "Account")">
                    <i class="fas fa-arrow-left"></i>
                    Quay lại đăng nhập
                </a>
            </div>
        </div>
    </div>

    <script>
        // Form submission with loading state
        document.getElementById('forgetPasswordForm').addEventListener('submit', function(e) {
            const email = document.getElementById('Email').value.trim();
            
            // Clear previous validation errors
            document.querySelectorAll('.validation-error').forEach(error => {
                error.classList.remove('field-validation-error');
            });
            document.querySelectorAll('.form-input').forEach(input => {
                input.classList.remove('input-validation-error');
            });
            
            let hasError = false;
            
            // Validate email
            if (!email) {
                const emailError = document.querySelector('span[asp-validation-for="Email"]');
                const emailInput = document.getElementById('Email');
                emailError.textContent = 'Email is required';
                emailError.classList.add('field-validation-error');
                emailInput.classList.add('input-validation-error');
                hasError = true;
            } else if (!/^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/.test(email)) {
                const emailError = document.querySelector('span[asp-validation-for="Email"]');
                const emailInput = document.getElementById('Email');
                emailError.textContent = 'Invalid email format';
                emailError.classList.add('field-validation-error');
                emailInput.classList.add('input-validation-error');
                hasError = true;
            }
            
            // If there are validation errors, prevent form submission
            if (hasError) {
                e.preventDefault();
                return false;
            }
            
            // If validation passes, show loading state
            const btn = document.getElementById('submitBtn');
            const text = document.getElementById('submitText');
            const icon = document.getElementById('submitIcon');
            
            btn.disabled = true;
            text.textContent = 'Đang gửi...';
            icon.className = 'loading-spinner';
        });

        // Clear validation errors when user starts typing
        document.getElementById('Email').addEventListener('input', function() {
            const error = document.querySelector('span[asp-validation-for="Email"]');
            const input = this;
            error.classList.remove('field-validation-error');
            input.classList.remove('input-validation-error');
        });
    </script>
</body>
</html> 