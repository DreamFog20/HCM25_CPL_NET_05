@model MovieTheater.ViewModels.ProfilePageViewModel
@{
    ViewData["Title"] = "My Profile";
    var profile = Model.Profile;
    var rank = Model.RankInfo;
    var highestRank = Model.AllRanks?.OrderByDescending(r => r.RequiredPointsForCurrentRank).FirstOrDefault();
    bool isMaxRank = (highestRank != null && rank.CurrentRankId == highestRank.CurrentRankId);
    var currentRankDisplay = Model.AllRanks?.FirstOrDefault(r => r.CurrentRankId == rank.CurrentRankId);
    var bannerGradient = currentRankDisplay?.ColorGradient ?? rank.ColorGradient ?? "linear-gradient(135deg, #4e54c8 0%, #6c63ff 50%, #8f94fb 100%)";
    var defaultPoster = Url.Content("~/image/default-movie-poster.jpg");
}
<link rel="stylesheet" href="~/css/profile-page.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<div class="profile-main-container">
    <div class="profile-2col-container">
        <div class="profile-2col-left">
            <div class="mt-0 mb-4" style="text-align:center;">
                <h3 class="mb-4" style="font-weight:700;color:#1769fa;"><i class="fas fa-user me-2"></i>Profile Information</h3>
            </div>
            <div class="profile-modern-card">
                <form asp-controller="MyAccount" asp-action="Edit" method="post" enctype="multipart/form-data" id="profileForm" class="profile-form-modern mt-3">
                    <div class="profile-banner-modern" id="profileBanner" style="background: @(currentRankDisplay?.ColorGradient ?? rank.ColorGradient ?? "linear-gradient(135deg, #4e54c8 0%, #6c63ff 50%, #8f94fb 100%)"); display: flex; flex-direction: column; align-items: stretch; padding: 2rem 1.5rem 2.5rem 1.5rem;">
                        <div class="profile-top-row d-flex flex-row align-items-start w-100" style="gap: 0.5rem;">
                            <div class="profile-banner-avatar-col d-flex flex-column align-items-center position-relative" style="flex:0 0 110px;">
                                <label for="profileImageInput" style="cursor: pointer; position: relative; display: block;">
                                    <img id="profileImagePreview" class="profile-avatar-modern profile-avatar-glow" src="@(Model.Profile.Image ?? "/image/profile.jpg")?t=@DateTime.Now.Ticks" alt="Profile Image" />
                                    <span class="avatar-camera-overlay"><i class="fas fa-camera"></i></span>
                                </label>
                                <input type="file" id="profileImageInput" name="Profile.ImageFile" class="d-none" accept="image/*" />
                                <div id="avatarBtns" class="avatar-upload-btns mt-2 d-flex justify-content-center" style="gap:0.3rem;">
                                    <button type="button" id="cancelAvatarBtn" class="avatar-btn avatar-btn-outline avatar-btn-xsmall">Cancel</button>
                                    <button type="submit" name="action" value="updateImage" class="avatar-btn avatar-btn-primary avatar-btn-xsmall">Update</button>
                                </div>
                            </div>
                            <div class="profile-info-name-badge d-flex flex-column align-items-center justify-content-start flex-grow-1" style="min-width: 120px; max-width: 220px; gap:0.15rem;">
                                <div class="profile-info-name mb-0" style="font-size:1.5rem; font-weight:700;">@Model.Profile.FullName</div>
                                <span class="rank-badge d-inline-flex align-items-center mb-0">
                                    <i class="@(currentRankDisplay?.IconClass ?? rank.IconClass ?? "fa-crown")" style="color: #fff; font-size: 1rem; margin-right: 0.5rem;"></i>
                                    <span>@rank.CurrentRankName</span>
                                </span>
                            </div>
                            <div class="profile-points-row d-flex flex-row gap-1 align-items-start ms-2" style="min-width: 100px;">
                                <div class="profile-point-card">
                                    <div class="profile-point-icon"><i class="fas fa-star"></i></div>
                                    <div class="profile-point-value">@Model.RankInfo.CurrentScore</div>
                                    <div class="profile-point-label">Current</div>
                                </div>
                                <div class="profile-point-card">
                                    <div class="profile-point-icon"><i class="fas fa-trophy"></i></div>
                                    <div class="profile-point-value">@Model.RankInfo.TotalPoints</div>
                                    <div class="profile-point-label">Total</div>
                                </div>
                            </div>
                        </div>
                        <div class="profile-progress-modern w-100" style="max-width: 100%; margin-top: 0.8rem;">
                            @if (!isMaxRank)
                            {
                                var profilePrevRankPoints = rank.RequiredPointsForCurrentRank;
                                var profileNextRankPoints = rank.RequiredPointsForNextRank;
                                var profilePointsForThisTier = profileNextRankPoints - profilePrevRankPoints;
                                var profileUserProgressInTier = rank.TotalPoints - profilePrevRankPoints;
                                var profileProgressPercentage = (profilePointsForThisTier > 0) ? Math.Max(0, Math.Min(100, (double)profileUserProgressInTier / profilePointsForThisTier * 100)) : (rank.TotalPoints >= profileNextRankPoints ? 100 : 0);
                                <div class="progress" style="height: 20px; border-radius: 999px;">
                                    <div class="progress-bar d-flex justify-content-end align-items-center" role="progressbar" style="width: @(profileProgressPercentage.ToString("0.##"))%;">
                                        <span class="progress-bar-percent no-banner-color" style="font-size:0.98rem; font-weight:600; margin-right:0.5rem;">@profileProgressPercentage.ToString("0")%</span>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-between align-items-center mt-3 w-100" style="max-width: 100%;">
                                    <span class="profile-next-rank-info" style="font-size:1.01rem; color:#f3f3f3; opacity:0.85;">Next: <b>@rank.NextRankName</b> &mdash; <b>@(profileNextRankPoints - rank.TotalPoints)</b> points needed</span>
                                    <a href="#" class="profile-view-details-link ms-2" data-bs-toggle="modal" data-bs-target="#rankDetailsModal" style="background: linear-gradient(90deg, #6a11cb 0%, #2575fc 100%); color:#fff; font-weight:600; border-radius:999px; padding:0.3rem 1.2rem 0.3rem 1.1rem; box-shadow:0 1px 4px rgba(0,0,0,0.08);"><span>View Details</span> <i class="fas fa-chevron-right"></i></a>
                                </div>
                            }
                            else
                            {
                                <div class="progress" style="height: 20px; border-radius: 999px;">
                                    <div class="progress-bar text-center" role="progressbar" style="width: 100%; align-content:center">Max</div>
                                </div>
                                <div class="d-flex justify-content-between align-items-center mt-3 w-100" style="max-width: 100%;">
                                    <span class="profile-next-rank-info" style="font-size:1.01rem; color:#f3f3f3; opacity:0.85;"><i class="fas fa-crown"></i> Max Rank Achieved!</span>
                                    <a href="#" class="profile-view-details-link ms-2" data-bs-toggle="modal" data-bs-target="#rankDetailsModal" style="background: linear-gradient(90deg, #6a11cb 0%, #2575fc 100%); color:#fff; font-weight:600; border-radius:999px; padding:0.3rem 1.2rem 0.3rem 1.1rem; box-shadow:0 1px 4px rgba(0,0,0,0.08);"><span>View Details</span> <i class="fas fa-chevron-right"></i></a>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="form-group profile-form-row">
                        <label for="Profile_FullName" class="profile-label">Full Name</label>
                        <div class="profile-data">
                            <input asp-for="Profile.FullName" class="form-control" placeholder="Enter Full Name" />
                            <span asp-validation-for="Profile.FullName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group profile-form-row">
                        <label for="Profile_DateOfBirth" class="profile-label">Date of Birth</label>
                        <div class="profile-data">
                            <input asp-for="Profile.DateOfBirth" type="date" class="form-control" />
                            <span asp-validation-for="Profile.DateOfBirth" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group profile-form-row">
                        <label class="profile-label">Gender</label>
                        <div class="profile-data d-flex align-items-center">
                            <div class="form-check form-check-inline gender-radio">
                                <input class="form-check-input" type="radio" asp-for="Profile.Gender" value="male" id="gender-male" />
                                <label class="form-check-label" for="gender-male">Male</label>
                            </div>
                            <div class="form-check form-check-inline gender-radio">
                                <input class="form-check-input" type="radio" asp-for="Profile.Gender" value="female" id="gender-female" />
                                <label class="form-check-label" for="gender-female">Female</label>
                            </div>
                            <div class="form-check form-check-inline gender-radio">
                                <input class="form-check-input" type="radio" asp-for="Profile.Gender" value="unknown" id="gender-unknown" />
                                <label class="form-check-label" for="gender-unknown">Other</label>
                            </div>
                            <span asp-validation-for="Profile.Gender" class="text-danger ms-2"></span>
                        </div>
                    </div>
                    <div class="form-group profile-form-row">
                        <label for="Profile_IdentityCard" class="profile-label">Identity Number</label>
                        <div class="profile-data">
                            <input asp-for="Profile.IdentityCard" class="form-control" placeholder="Enter Indentity Number" />
                            <span asp-validation-for="Profile.IdentityCard" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group profile-form-row">
                        <label for="Profile_Email" class="profile-label">Email</label>
                        <div class="profile-data">
                            <input asp-for="Profile.Email" class="form-control" readonly placeholder="Your Email" />
                            <span asp-validation-for="Profile.Email" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group profile-form-row">
                        <label for="Profile_Address" class="profile-label">Address</label>
                        <div class="profile-data">
                            <input asp-for="Profile.Address" class="form-control" placeholder="Enter address" />
                            <span asp-validation-for="Profile.Address" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group profile-form-row">
                        <label for="Profile_PhoneNumber" class="profile-label">Phone Number</label>
                        <div class="profile-data">
                            <input asp-for="Profile.PhoneNumber" class="form-control" placeholder="Enter Phone Number" />
                            <span asp-validation-for="Profile.PhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="d-flex justify-content-center gap-3 mt-4">
                        @if (!profile.IsGoogleAccount)
                        {
                            <a href="@Url.Action("ChangePassword", "MyAccount")" class="btn btn-secondary px-4 py-2 rounded">Change Password</a>
                        }
                        <button type="submit" name="action" value="editProfile" class="btn btn-primary px-4 py-2 rounded">Update</button>
                    </div>
                </form>
            </div>
            <partial name="_ToastMessages" />
        </div>
        <div class="profile-2col-right">
            <div class="mt-0 mb-4" style="text-align:center;">
                <h3 class="mb-4" style="font-weight:700;color:#1769fa;"><i class="fas fa-history me-2"></i>Booking History</h3>
                <div class="profile-history-filter mb-3 d-flex justify-content-center gap-2">
                    <button class="btn btn-outline-primary filter-btn active" data-status="all">All</button>
                    <button class="btn btn-outline-success filter-btn" data-status="booked">Booked</button>
                    <button class="btn btn-outline-danger filter-btn" data-status="canceled">Canceled</button>
                </div>
                <div id="profileHistoryCards">
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-3">Loading booking history...</p>
                    </div>
                </div>
                <nav id="profileHistoryPagination" class="mt-3"></nav>
            </div>
        </div>
    </div>
    </div>
<!-- Rank Details Modal -->
<div class="modal fade" id="rankDetailsModal" tabindex="-1" aria-labelledby="rankDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rankDetailsModalLabel">Rank Tiers & Benefits</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                @if (Model.AllRanks != null && Model.AllRanks.Any())
                {
                    var sortedRanks = Model.AllRanks.OrderBy(r => r.RequiredPointsForCurrentRank).ToList();
                    var currentUserScore = Model.RankInfo.TotalPoints;
                    var currentUserRankId = Model.RankInfo.CurrentRankId;

                    <div id="rankCarousel" class="carousel slide" data-bs-ride="carousel">
                        <ol class="carousel-indicators">
                            @for (int i = 0; i < sortedRanks.Count; i++)
                            {
                                var rankDetail = sortedRanks[i];
                                var activeClass = rankDetail.CurrentRankId == currentUserRankId ? "active" : "";
                                <li data-bs-target="#rankCarousel" data-bs-slide-to="@i" class="@activeClass"></li>
                            }
                        </ol>
                        <div class="carousel-inner">
                            @for (int i = 0; i < sortedRanks.Count; i++)
                            {
                                var rankDetail = sortedRanks[i];
                                var rankGradient = rankDetail.ColorGradient ?? "linear-gradient(135deg, #4e54c8 0%, #6c63ff 50%, #8f94fb 100%)";
                                var rankIcon = rankDetail.IconClass ?? "fas fa-crown";
                                var rankStatus = rankDetail.CurrentRankId == currentUserRankId ? "Current Rank" : (currentUserScore >= rankDetail.RequiredPointsForCurrentRank ? "Achieved" : "Not Reached");
                                var activeClass = rankDetail.CurrentRankId == currentUserRankId ? "active" : "";
                                var prevRankPoints = i > 0 ? sortedRanks[i - 1].RequiredPointsForCurrentRank : 0;
                                var targetRankPoints = rankDetail.RequiredPointsForCurrentRank;
                                var pointsForThisTier = targetRankPoints - prevRankPoints;
                                double progressPercentage;
                                if (currentUserScore >= targetRankPoints)
                                {
                                    progressPercentage = 100;
                                }
                                else if (currentUserScore < prevRankPoints)
                                {
                                    progressPercentage = 0;
                                }
                                else
                                {
                                    var progressRaw = currentUserScore - prevRankPoints;
                                    progressPercentage = (pointsForThisTier > 0)
                                    ? Math.Min(100, (double)progressRaw / pointsForThisTier * 100)
                                    : 100;
                                }
                                <div class="carousel-item @activeClass">
                                    <div class="rank-card" style="--rank-gradient: @rankGradient;">
                                        <div class="rank-card-header">
                                            <i class="@rankIcon" style="color: #333; font-size: 1.25rem; background: #fff; border-radius: 50%; padding: 0.25rem; border: 1px solid #e0e0e0;"></i>
                                            <span class="rank-title">@rankDetail.CurrentRankName Rank</span>
                                            <span class="rank-status">@rankStatus</span>
                                        </div>
                                        <div class="rank-card-body">
                                            <div class="rank-progress-wrapper">
                                                <div class="progress">
                                                    <div class="progress-bar" role="progressbar"
                                                         style="width: @progressPercentage.ToString("0.##")%; --progress-width: @progressPercentage.ToString("0.##")%;">
                                                    </div>
                                                </div>
                                                <div class="rank-points">
                                                    <span>@prevRankPoints.ToString("N0") pts</span>
                                                    <span>@targetRankPoints.ToString("N0") pts</span>
                                                </div>
                                            </div>
                                            <div class="benefits-section">
                                                <div class="benefits-header">
                                                    <i class="fas fa-gift"></i>
                                                    <span>Benefits:</span>
                                                </div>
                                                <div class="benefits-divider"></div>
                                                <div class="benefits-content">
                                                    <div class="benefit-item">
                                                        <i class="fas fa-ticket-alt"></i>
                                                        <div class="benefit-text">
                                                            <span class="benefit-label">Discount on Tickets</span>
                                                            <span class="benefit-value">@rankDetail.CurrentDiscountPercentage.ToString("0.00")%</span>
                                                        </div>
                                                    </div>
                                                    <div class="benefit-item">
                                                        <i class="fas fa-coins"></i>
                                                        <div class="benefit-text">
                                                            <span class="benefit-label">Point Earning Rate</span>
                                                            <span class="benefit-value">@rankDetail.CurrentPointEarningPercentage.ToString("0.00")%</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="auto-upgrade">
                                                <i class="fas fa-sync-alt"></i>
                                                Auto-upgrade at @targetRankPoints.ToString("N0") pts
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#rankCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#rankCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
                else
                {
                    <div class="text-center">No rank information available.</div>
                }
            </div>
        </div>
    </div>
</div>
<script>
    function initProfileAvatarUpload() {
        const imageInput = document.getElementById('profileImageInput');
        const imagePreview = document.getElementById('profileImagePreview');
        const avatarBtns = document.getElementById('avatarBtns');
        const cancelBtn = document.getElementById('cancelAvatarBtn');
        const originalSrc = imagePreview ? imagePreview.src : '';
        if (!imageInput || !imagePreview) return;
        imageInput.addEventListener('change', function(event) {
            if (event.target.files && event.target.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    if (avatarBtns) avatarBtns.classList.add('is-visible');
                }
                reader.readAsDataURL(event.target.files[0]);
            }
        });
        if (cancelBtn && avatarBtns) {
            cancelBtn.addEventListener('click', function() {
                imagePreview.src = originalSrc;
                imageInput.value = '';
                avatarBtns.classList.remove('is-visible');
            });
        }
    }
    initProfileAvatarUpload();
    // Booking History Cards AJAX
    $(function() {
        let historyDataCache = [];
        let currentPage = 1;
        const pageSize = 6;
        function renderHistoryCards(historyData) {
            historyDataCache = historyData || [];
            renderHistoryPage(currentPage);
            renderHistoryPagination();
        }
        function renderHistoryPage(page) {
            let html = '';
            const start = (page - 1) * pageSize;
            const end = start + pageSize;
            const pageData = historyDataCache.slice(start, end);
            if (pageData.length > 0) {
                html += '<div class="booking-card-list">';
                pageData.forEach(function(booking) {
                    var movieName = booking.movieShow && booking.movieShow.movie ? booking.movieShow.movie.movieNameEnglish : 'N/A';
                    var showDate = booking.movieShow && booking.movieShow.showDate ? new Date(booking.movieShow.showDate).toLocaleDateString('en-GB') : 'N/A';
                    var showTime = booking.movieShow && booking.movieShow.schedule && booking.movieShow.schedule.scheduleTime ? booking.movieShow.schedule.scheduleTime.substring(0, 5) : 'N/A';
                    var seats = booking.seat || '';
                    var seatCount = seats ? seats.split(',').length : 0;
                    var statusBadge = booking.status === 1 ? '<span class="badge bg-success">Booked</span>' : '<span class="badge bg-danger">Canceled</span>';
                    var totalMoney = booking.totalMoney === 0 ? '0 VND' : (booking.totalMoney ? new Intl.NumberFormat('en-US').format(booking.totalMoney) + ' VND' : 'N/A');
                    var totalAmountHtml = `<span id="booking-total-${booking.invoiceId}" class="booking-total-amount">${totalMoney}</span>`;
                    if (booking.status === 1 && booking.invoiceId) {
                        $.ajax({
                            url: '/api/foodinvoice/gettotalfoodprice',
                            type: 'GET',
                            data: { invoiceId: booking.invoiceId },
                            success: function(foodRes) {
                                var foodPrice = (typeof foodRes === 'number') ? foodRes : (foodRes.totalFoodPrice || 0);
                                var seatPrice = booking.totalMoney || 0;
                                var total = seatPrice + (foodPrice || 0);
                                var totalText = new Intl.NumberFormat('en-US').format(total) + ' VND';
                                if (total === 0) totalText = '0 VND';
                                $("#booking-total-" + booking.invoiceId)
                                    .text(totalText)
                                    .addClass('booking-total-amount-highlight');
                            },
                            error: function() {
                                $("#booking-total-" + booking.invoiceId).text(totalMoney);
                            }
                        });
                    }
                    html += `<div class="booking-card">
                        <div class="booking-card-row booking-card-row-top">
                            <div class="booking-card-title">${movieName}</div>
                            <div class="booking-card-date" style="flex:1.5 1 0%;min-width:90px;max-width:160px;"><i class=\"fas fa-calendar-alt\"></i> ${showDate}</div>
                            <div class="booking-card-time"><i class=\"fas fa-clock\"></i> ${showTime}</div>
                            <div class="booking-card-actions dropdown">
                                <button class="btn btn-light btn-sm rounded-circle" type="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-ellipsis-v"></i></button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="/Ticket/Details/${booking.invoiceId}"><i class="fas fa-info-circle me-2"></i>Detail</a></li>
                                    ${booking.status === 1 ? `<li><form action="/Ticket/Cancel" method="post" class="d-inline" onsubmit="return confirm('Do you want to cancel ticket ?');"><input type="hidden" name="id" value="${booking.invoiceId}" /><input type="hidden" name="returnUrl" value="/MyAccount/MainPage?tab=Profile" /><button type="submit" class="dropdown-item"><i class="fas fa-times me-2"></i>Cancel Ticket</button></form></li>` : ''}
                                </ul>
                            </div>
                        </div>
                        <div class="booking-card-row booking-card-row-seats">
                            <div class="booking-card-seats"><i class=\"fas fa-chair\"></i> ${seatCount} seat(s): ${seats}</div>
                        </div>
                        <div class="booking-card-row booking-card-row-bottom">
                            <div class="booking-card-amount"><i class=\"fas fa-money-bill-wave\"></i> ${totalAmountHtml}</div>
                            <div class="booking-card-status">${statusBadge}</div>
                        </div>
                    </div>`;
                });
                html += '</div>';
            } else {
                html += '<div class="alert alert-info text-center"><i class="fas fa-info-circle me-2"></i>Không có vé nào.</div>';
            }
            $('#profileHistoryCards').html(html);
        }
        function renderHistoryPagination() {
            const totalPages = Math.ceil(historyDataCache.length / pageSize);
            if (totalPages <= 1) {
                $('#profileHistoryPagination').html('');
                return;
            }
            let html = '<ul class="pagination justify-content-center">';
            html += `<li class="page-item${currentPage === 1 ? ' disabled' : ''}"><a class="page-link" href="#" data-page="${currentPage - 1}">Previous</a></li>`;

            if (totalPages <= 5) {
                for (let i = 1; i <= totalPages; i++) {
                    html += `<li class="page-item${currentPage === i ? ' active' : ''}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
                }
            } else {
                html += `<li class="page-item${currentPage === 1 ? ' active' : ''}"><a class="page-link" href="#" data-page="1">1</a></li>`;
                if (currentPage > 3) {
                    html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
                let start = Math.max(2, currentPage - 1);
                let end = Math.min(totalPages - 1, currentPage + 1);
                for (let i = start; i <= end; i++) {
                    if (i === 1 || i === totalPages) continue;
                    html += `<li class="page-item${currentPage === i ? ' active' : ''}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
                }
                if (currentPage < totalPages - 2) {
                    html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
                html += `<li class="page-item${currentPage === totalPages ? ' active' : ''}"><a class="page-link" href="#" data-page="${totalPages}">${totalPages}</a></li>`;
            }
            html += `<li class="page-item${currentPage === totalPages ? ' disabled' : ''}"><a class="page-link" href="#" data-page="${currentPage + 1}">Next</a></li>`;
            html += '</ul>';
            $('#profileHistoryPagination').html(html);
            $('#profileHistoryPagination .page-link').off('click').on('click', function (e) {
                e.preventDefault();
                const page = parseInt($(this).data('page'));
                if (!isNaN(page) && page >= 1 && page <= totalPages && page !== currentPage) {
                    currentPage = page;
                    renderHistoryPage(currentPage);
                    renderHistoryPagination();
                }
            });
        }
        let currentStatus = "all";
        function loadHistory(status = "all") {
            currentStatus = status;
            $('#profileHistoryCards').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-3">Loading booking history...</p></div>');
            $.ajax({
                url: '/Ticket/HistoryPartial',
                type: 'GET',
                data: { status: status },
                success: function (response) {
                    if (response.success) {
                        currentPage = 1;
                        renderHistoryCards(response.data);
                    } else {
                        $('#profileHistoryCards').html('<div class="alert alert-danger"><i class="fas fa-exclamation-triangle"></i> ' + response.message + '</div>');
                    }
                },
                error: function () {
                    $('#profileHistoryCards').html('<div class="alert alert-danger"><i class="fas fa-exclamation-triangle"></i> Error loading data.</div>');
                }
            });
        }
        loadHistory();
        $('.profile-history-filter').on('click', '.filter-btn', function () {
            $('.filter-btn').removeClass('active');
            $(this).addClass('active');
            const status = $(this).data('status');
            loadHistory(status);
        });
    });
</script>
<script>
function hexToRgb(hex) {
    hex = hex.replace('#', '');
    if (hex.length === 3) {
        hex = hex.split('').map(x => x + x).join('');
    }
    var bigint = parseInt(hex, 16);
    var r = (bigint >> 16) & 255;
    var g = (bigint >> 8) & 255;
    var b = bigint & 255;
    return [r, g, b];
}
function getFirstColorFromGradient(gradient) {
    // Match hex colors in the gradient string
    var match = gradient.match(/#([0-9a-fA-F]{3,6})/g);
    if (match && match.length > 0) {
        return match[0];
    }
    return null;
}
function setProfileBannerTextColor() {
    const banner = document.getElementById('profileBanner');
    if (banner) {
        // Get the inline style attribute directly
        const styleAttr = banner.getAttribute('style') || '';
        const colorHex = getFirstColorFromGradient(styleAttr);
        if (colorHex) {
            const [r, g, b] = hexToRgb(colorHex);
            const yiq = ((r*299)+(g*587)+(b*114))/1000;
            const textColor = yiq >= 128 ? 'black' : 'white';
            banner.style.setProperty('color', textColor, 'important');
            banner.querySelectorAll('*:not(.no-banner-color)').forEach(el => el.style.setProperty('color', textColor, 'important'));
        }
    }
}
// Call the function directly, since this is a partial view
setProfileBannerTextColor();
</script>
<style>
.booking-total-amount-highlight {
    color: #1769fa !important;
    font-weight: bold;
    font-size: 1.15em;
}
</style>
