@model MovieTheater.ViewModels.ProfilePageViewModel
@{
    ViewData["Title"] = "My Profile";
    var profile = Model.Profile;
    var rank = Model.RankInfo;
    // Find the highest rank (by required points)
    var highestRank = Model.AllRanks?.OrderByDescending(r => r.RequiredPointsForCurrentRank).FirstOrDefault();
    bool isMaxRank = (highestRank != null && rank.CurrentRankId == highestRank.CurrentRankId);
    // Get the current rank's color gradient from AllRanks (for consistency with modal)
    var currentRankDisplay = Model.AllRanks?.FirstOrDefault(r => r.CurrentRankId == rank.CurrentRankId);
    var bannerGradient = currentRankDisplay?.ColorGradient ?? rank.ColorGradient ?? "linear-gradient(135deg, #4e54c8 0%, #6c63ff 50%, #8f94fb 100%)";
}
@if (rank == null)
{
    <div class="alert alert-warning">No rank information available.</div>
    return;
}

<link rel="stylesheet" href="~/css/profile-page.css" asp-append-version="true" />

<div class="container">
    <div class="signup-title">Profile</div>
    <div class="profile-container">
        <form asp-controller="MyAccount" asp-action="Edit" method="post" enctype="multipart/form-data" id="profileForm">
            <div class="profile-banner" style="background: @bannerGradient">
                <div class="profile-avatar-wrapper" style="margin-bottom: 0.5rem;">
                    <label for="profileImageInput" style="cursor: pointer;">
                        <img id="profileImagePreview" class="profile-avatar"
                             src="@(Model.Profile.Image ?? "/image/profile.jpg")"
                             alt="Profile Image" />
                    </label>
                    <input type="file" id="profileImageInput" name="Profile.ImageFile" class="d-none" accept="image/*" />
                    <div id="avatarBtns" class="avatar-upload-btns">
                        <button type="submit" name="action" value="updateImage" class="avatar-btn avatar-btn-update">Update</button>
                        <button type="button" class="avatar-btn avatar-btn-cancel" id="cancelAvatarBtn">Cancel</button>
                    </div>
                </div>
                <div class="profile-info">
                    <div style="font-size:1.5rem;font-weight:600;">@profile.FullName</div>
                    <div style="margin-top:0.3rem;">
                        <span class="rank-badge" style="font-size:0.95rem;padding:0.18rem 0.9rem;margin:0;background:rgba(255,255,255,0.15);color:#fff;backdrop-filter:blur(5px);border:1px solid rgba(255,255,255,0.2);">
                            <i class="@(currentRankDisplay?.IconClass ?? rank.IconClass ?? "fa-crown")" style="color: #333; font-size: 1.25rem; background: #fff; border-radius: 50%; padding: 0.25rem; border: 1px solid #e0e0e0; margin-right: 0.5rem;"></i> @rank.CurrentRankName
                        </span>
                    </div>
                    <div style="font-size:1.1rem; margin-top:0.3rem; display: flex; gap: 2rem; align-items: center;">
                        <span>
                            Current Points: <b>@rank.CurrentScore</b>
                        </span>
                        <span style="opacity: 0.8;">|</span>
                        <span>
                            Total Points: <b>@rank.TotalPoints</b>
                        </span>
                    </div>
                    @if (isMaxRank)
                    {
                        <!-- AC-04: Max Rank Achieved Message -->
                        <span class="max-rank-message" role="status" aria-live="polite">
                            <i class="fas fa-crown"></i>
                            Max Rank Achieved!
                        </span>
                        <div class="next-rank-row" style="justify-content: flex-start; width: 100%; margin-top: 0.5rem;">
                            <button type="button" class="btn view-details-btn" data-bs-toggle="modal" data-bs-target="#rankDetailsModal">
                                <i class="fas fa-info-circle"></i> View Details
                            </button>
                        </div>
                    }
                    else
                    {
                        // Progress bar and next rank info as in modal, but without min/max points
                        var profilePrevRankPoints = rank.RequiredPointsForCurrentRank;
                        var profileNextRankPoints = rank.RequiredPointsForNextRank;
                        var profilePointsForThisTier = profileNextRankPoints - profilePrevRankPoints;
                        var profileUserProgressInTier = rank.TotalPoints - profilePrevRankPoints;
                        var profileProgressPercentage = (profilePointsForThisTier > 0) ? Math.Max(0, Math.Min(100, (double)profileUserProgressInTier / profilePointsForThisTier * 100)) : (rank.TotalPoints >= profileNextRankPoints ? 100 : 0);
                        <div class="rank-progress-wrapper" style="margin-bottom: 0.3rem;">
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width: @(profileProgressPercentage.ToString("0.##"))%; --progress-width: @(profileProgressPercentage.ToString("0.##"))%;"></div>
                            </div>
                        </div>
                        <div class="next-rank-row mt-0" style="display: flex; align-items: center; justify-content: space-between; gap: 1rem; flex-wrap: nowrap;">
                            <span class="next-rank-info" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; flex: 1;">
                                Next: <b>@rank.NextRankName</b> &mdash; <b>@(profileNextRankPoints - rank.TotalPoints)</b> points needed
                            </span>

                            <button type="button" class="btn view-details-btn"
                                    style="white-space: nowrap; flex-shrink: 0;"
                                    data-bs-toggle="modal"
                                    data-bs-target="#rankDetailsModal">
                                <i class="fas fa-info-circle"></i> View Details
                            </button>

                        </div>
                    }
                </div>
            </div>
            <div class="container">
                <div class="row">
                <div class="col-md-12">
                    @if (profile.IsGoogleAccount)
                        {
                            <div class="alert alert-warning mb-4" role="alert">
                                For Google accounts, please complete the missing information to book a ticket.
                            </div>
                        }
                        <div class="form-group row align-items-center">
                            <label class="form-label-col"><strong>Full Name</strong></label>
                            <div class="form-input-col">
                            <input asp-for="Profile.FullName" class="form-control" placeholder="Enter your full name" />
                            <span asp-validation-for="Profile.FullName" class="text-danger"></span>
                        </div>
                    </div>
                        <div class="form-group row align-items-center">
                            <label class="form-label-col"><strong>Date of Birth</strong></label>
                            <div class="form-input-col">
                            <input asp-for="Profile.DateOfBirth" type="date" class="form-control" />
                            <span asp-validation-for="Profile.DateOfBirth" class="text-danger"></span>
                        </div>
                    </div>
                        <div class="form-group row align-items-center">
                            <label class="form-label-col"><strong>Gender</strong></label>
                            <div class="form-input-col">
                                <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" asp-for="Profile.Gender" value="male" />
                                    <label class="form-check-label">Male</label>
                                </div>
                                <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" asp-for="Profile.Gender" value="female" />
                                    <label class="form-check-label">Female</label>
                                </div>
                                <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" asp-for="Profile.Gender" value="unknown" />
                                    <label class="form-check-label">Unknown</label>
                            </div>
                            <span asp-validation-for="Profile.Gender" class="text-danger"></span>
                        </div>
                    </div>
                        <div class="form-group row align-items-center">
                            <label class="form-label-col"><strong>Identity Number</strong></label>
                            <div class="form-input-col">
                            <input asp-for="Profile.IdentityCard" class="form-control" placeholder="Enter your identity number" />
                            <span asp-validation-for="Profile.IdentityCard" class="text-danger"></span>
                        </div>
                    </div>
                        <div class="form-group row align-items-center">
                            <label class="form-label-col"><strong>Email</strong></label>
                            <div class="form-input-col">
                            <input asp-for="Profile.Email" class="form-control" readonly placeholder="Your email address" />
                            <span asp-validation-for="Profile.Email" class="text-danger"></span>
                        </div>
                    </div>
                        <div class="form-group row align-items-center">
                            <label class="form-label-col"><strong>Address</strong></label>
                            <div class="form-input-col">
                            <input asp-for="Profile.Address" class="form-control" placeholder="Enter your address" />
                            <span asp-validation-for="Profile.Address" class="text-danger"></span>
                        </div>
                    </div>
                        <div class="form-group row align-items-center">
                            <label class="form-label-col"><strong>Phone Number</strong></label>
                            <div class="form-input-col">
                            <input asp-for="Profile.PhoneNumber" class="form-control" placeholder="Enter your phone number" />
                            <span asp-validation-for="Profile.PhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="d-flex justify-content-center gap-3 mt-4">
                        @if (!profile.IsGoogleAccount)
                        {
                            <a href="@Url.Action("ChangePassword", "MyAccount")" class="btn btn-secondary px-4 py-2 rounded">Change Password</a>
                        }
                        <button type="submit" name="action" value="editProfile" class="btn btn-primary px-4 py-2 rounded">Edit Profile</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    </div>
</div>
<partial name="_ToastMessages" />

<!-- Rank Details Modal -->
<div class="modal fade" id="rankDetailsModal" tabindex="-1" aria-labelledby="rankDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rankDetailsModalLabel">Rank Tiers & Benefits</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                @if (Model.AllRanks != null && Model.AllRanks.Any())
                {
                    var sortedRanks = Model.AllRanks.OrderBy(r => r.RequiredPointsForCurrentRank).ToList();
                    var currentUserScore = Model.RankInfo.TotalPoints;
                    var currentUserRankId = Model.RankInfo.CurrentRankId;

                    <div id="rankCarousel" class="carousel slide" data-bs-ride="carousel">
                        <ol class="carousel-indicators">
                            @for (int i = 0; i < sortedRanks.Count; i++)
                            {
                                var rankDetail = sortedRanks[i];
                                // The indicator should be active if its corresponding carousel item is active, matching the slide.
                                var activeClass = rankDetail.CurrentRankId == currentUserRankId ? "active" : "";
                                <li data-bs-target="#rankCarousel" data-bs-slide-to="@i" class="@activeClass"></li>
                            }
                        </ol>

                        <div class="carousel-inner">
                            @for (int i = 0; i < sortedRanks.Count; i++)
                            {
                                var rankDetail = sortedRanks[i];
                                var rankGradient = rankDetail.ColorGradient ?? "linear-gradient(135deg, #4e54c8 0%, #6c63ff 50%, #8f94fb 100%)";
                                var rankIcon = rankDetail.IconClass ?? "fas fa-crown";
                                var rankStatus = rankDetail.CurrentRankId == currentUserRankId ? "Current Rank" : (currentUserScore >= rankDetail.RequiredPointsForCurrentRank ? "Achieved" : "Not Reached");
                                var activeClass = rankDetail.CurrentRankId == currentUserRankId ? "active" : "";

                                var prevRankPoints = i > 0 ? sortedRanks[i - 1].RequiredPointsForCurrentRank : 0;
                                var targetRankPoints = rankDetail.RequiredPointsForCurrentRank;
                                var pointsForThisTier = targetRankPoints - prevRankPoints;

                                double progressPercentage;
                                if (currentUserScore >= targetRankPoints)
                                {
                                    progressPercentage = 100; // Already surpassed this rank
                                }
                                else if (currentUserScore < prevRankPoints)
                                {
                                    progressPercentage = 0; // Not yet in this tier
                                }
                                else
                                {
                                    // Actively in this tier — show partial progress
                                    var progressRaw = currentUserScore - prevRankPoints;
                                    progressPercentage = (pointsForThisTier > 0)
                                    ? Math.Min(100, (double)progressRaw / pointsForThisTier * 100)
                                    : 100;
                                }

                                <div class="carousel-item @activeClass">
                                    <div class="rank-card" style="--rank-gradient: @rankGradient;">
                                        <div class="rank-card-header">
                                            <i class="@rankIcon" style="color: #333; font-size: 1.25rem; background: #fff; border-radius: 50%; padding: 0.25rem; border: 1px solid #e0e0e0;"></i>
                                            <span class="rank-title">@rankDetail.CurrentRankName Rank</span>
                                            <span class="rank-status">@rankStatus</span>
                                        </div>
                                        <div class="rank-card-body">
                                            <div class="rank-progress-wrapper">
                                                <div class="progress">
                                                    <div class="progress-bar" role="progressbar"
                                                         style="width: @progressPercentage.ToString("0.##")%; --progress-width: @progressPercentage.ToString("0.##")%;">
                                                    </div>
                                                </div>
                                                <div class="rank-points">
                                                    <span>@prevRankPoints.ToString("N0") pts</span>
                                                    <span>@targetRankPoints.ToString("N0") pts</span>
                                                </div>
                                            </div>

                                            <div class="benefits-section">
                                                <div class="benefits-header">
                                                    <i class="fas fa-gift"></i>
                                                    <span>Benefits:</span>
                                                </div>
                                                <div class="benefits-divider"></div>
                                                <div class="benefits-content">
                                                    <div class="benefit-item">
                                                        <i class="fas fa-ticket-alt"></i>
                                                        <div class="benefit-text">
                                                            <span class="benefit-label">Discount on Tickets</span>
                                                            <span class="benefit-value">@rankDetail.CurrentDiscountPercentage.ToString("0.00")%</span>
                                                        </div>
                                                    </div>
                                                    <div class="benefit-item">
                                                        <i class="fas fa-coins"></i>
                                                        <div class="benefit-text">
                                                            <span class="benefit-label">Point Earning Rate</span>
                                                            <span class="benefit-value">@rankDetail.CurrentPointEarningPercentage.ToString("0.00")%</span>
                                                        </div>
                                                    </div>
                                                </div>
                            </div>

                                            <div class="auto-upgrade">
                                                <i class="fas fa-sync-alt"></i>
                                                Auto-upgrade at @targetRankPoints.ToString("N0") pts
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#rankCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#rankCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
                else
                {
                    <div class="text-center">No rank information available.</div>
                }
            </div>
        </div>
    </div>
</div>
<script>
    function initProfileAvatarUpload() {
        const imageInput = document.getElementById('profileImageInput');
        const imagePreview = document.getElementById('profileImagePreview');
        const avatarBtns = document.getElementById('avatarBtns');
        const cancelBtn = document.getElementById('cancelAvatarBtn');
        const originalSrc = imagePreview ? imagePreview.src : '';

        if (!imageInput || !imagePreview || !avatarBtns || !cancelBtn) return;

        imageInput.addEventListener('change', function(event) {
            if (event.target.files && event.target.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    avatarBtns.classList.add('is-visible');
                }
                reader.readAsDataURL(event.target.files[0]);
            }
        });

        cancelBtn.addEventListener('click', function() {
            imagePreview.src = originalSrc;
            imageInput.value = '';
            avatarBtns.classList.remove('is-visible');
        });
    }
    @* document.addEventListener('DOMContentLoaded', initProfileAvatarUpload); *@
      initProfileAvatarUpload();
</script>
