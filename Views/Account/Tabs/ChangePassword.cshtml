@model MovieTheater.ViewModels.RegisterViewModel;
@{
    ViewData["Title"] = "Change Password";
}

<a asp-controller="MyAccount" asp-action="MainPage" asp-route-tab="Profile" class="btn btn-secondary ms-3 mt-3">
    &larr; Return
</a>

<div class="d-flex justify-content-center align-items-center vh-70">
    <div class="p-4 shadow rounded" style="width: 100%; max-width: 500px; margin-bottom: 30px">
        <h2 class="text-center mb-4">Change Password</h2>
        <form asp-controller="MyAccount" asp-action="ChangePassword" method="post">
            <div class="form-group mb-3">
                <label for="currentPassword" class="form-label">Current Password</label>
                <input type="password" class="form-control" id="currentPassword" name="currentPassword" placeholder="Enter current password" required />
                <span id="currentPasswordFeedback" class="form-text text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter new password" required />
                <span id="newPasswordFeedback" class="form-text text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <label for="confirmNewPassword" class="form-label">Confirm New Password</label>
                <input type="password" class="form-control" id="confirmNewPassword" name="confirmPassword" placeholder="Confirm new password" required />
                <span id="passwordFeedback" class="form-text text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <button type="button" class="btn btn-secondary w-100 mb-3" id="sendOtpBtn">Send OTP to Email</button>
                <div id="otpInputWrapper" style="display:none;">
                    <input type="text" class="form-control mb-2" id="otpInput" placeholder="Enter OTP" />
                    Please check your inbox, including the Spam or Junk folder.
                    <span id="otpCountdown" class="form-text text-muted"></span>
                    <button type="button" class="btn btn-primary mt-3 w-100" id="verifyOtpBtn">Verify OTP</button>
                </div>
                <span id="otpFeedback" class="form-text"></span>
            </div>

            <div class="text-center mt-4 mb-4">
                <button type="submit" class="btn btn-primary px-4 py-2 rounded me-2" id="submitBtn" disabled>Change Password</button>

            </div>
            <div class="alert alert-warning mb-3" role="alert">
                For security reasons, changing your password will log you out and require you to sign in again.
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(function() {
            const sendOtpBtn = document.getElementById('sendOtpBtn');
            const otpInputWrapper = document.getElementById('otpInputWrapper');
            const otpCountdown = document.getElementById('otpCountdown');
            const verifyOtpBtn = document.getElementById('verifyOtpBtn');
            const otpFeedback = document.getElementById('otpFeedback');
            const passwordFeedback = document.getElementById('passwordFeedback');
            const currentPasswordFeedback = document.getElementById('currentPasswordFeedback');
            const newPasswordInput = document.getElementById('newPassword');
            const confirmNewPasswordInput = document.getElementById('confirmNewPassword');
            const currentPasswordInput = document.getElementById('currentPassword');
            const submitBtn = document.getElementById('submitBtn');

            let countdownInterval;
            let countdown = 600; // 10 minutes in seconds
            let otpVerified = false;

            function validateForm() {
                const currentPassword = currentPasswordInput.value;
                const newPassword = newPasswordInput.value;
                const confirmPassword = confirmNewPasswordInput.value;

                if (!currentPassword || !newPassword || !confirmPassword) {
                    submitBtn.disabled = true;
                    return;
                }

                if (newPassword !== confirmPassword) {
                    passwordFeedback.textContent = 'Passwords do not match';
                    submitBtn.disabled = true;
                    return;
                }

                if (newPassword === currentPassword) {
                    passwordFeedback.textContent = 'New password must be different from current password';
                    submitBtn.disabled = true;
                    return;
                }

                passwordFeedback.textContent = '';
                sendOtpBtn.disabled = false;
            }

            // Add event listeners for password validation
            newPasswordInput.addEventListener('input', validateForm);
            confirmNewPasswordInput.addEventListener('input', validateForm);
            currentPasswordInput.addEventListener('input', validateForm);

            // Initially disable the OTP button until passwords are valid
            sendOtpBtn.disabled = true;

            sendOtpBtn.addEventListener('click', async function() {
                sendOtpBtn.disabled = true;
                otpFeedback.textContent = '';
                otpFeedback.className = 'form-text';
                try {
                    const response = await fetch('/MyAccount/SendOtp', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    if (data.success) {
                        otpInputWrapper.style.display = 'block';
                        countdown = 600; // 10 minutes
                        updateCountdown();
                        countdownInterval = setInterval(updateCountdown, 1000);
                    } else {
                        otpFeedback.className = 'form-text text-danger';
                        otpFeedback.textContent = data.error || 'Failed to send OTP.';
                        sendOtpBtn.disabled = false;
                    }
                } catch (error) {
                    otpFeedback.className = 'form-text text-danger';
                    otpFeedback.textContent = 'Error sending OTP. Please try again.';
                    sendOtpBtn.disabled = false;
                }
            });

            function updateCountdown() {
                const minutes = Math.floor(countdown / 60);
                const seconds = countdown % 60;
                otpCountdown.textContent = ` (Resend in ${minutes}:${seconds.toString().padStart(2, '0')})`;
                if (countdown <= 0) {
                    clearInterval(countdownInterval);
                    otpCountdown.textContent = '';
                    sendOtpBtn.disabled = false;
                }
                countdown--;
            }

            verifyOtpBtn.addEventListener('click', async function() {
                otpFeedback.textContent = '';
                otpFeedback.className = 'form-text';
                otpFeedback.style.color = '';
                const otpInput = document.getElementById('otpInput').value;

                if (!otpInput) {
                    otpFeedback.className = 'form-text text-danger';
                    otpFeedback.textContent = 'Please enter the OTP.';
                    return;
                }
                verifyOtpBtn.disabled = true;
                try {
                    const response = await fetch('/MyAccount/VerifyOtp', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ otp: otpInput })
                    });
                    const data = await response.json();
                    if (data.success) {
                        otpFeedback.className = 'form-text text-success-message';
                        otpFeedback.style.color = 'green';
                        otpFeedback.textContent = 'OTP verified successfully!';
                        otpVerified = true;
                        submitBtn.disabled = false;
                        otpInputWrapper.style.display = 'none';
                    } else {
                        otpFeedback.className = 'form-text text-danger';
                        otpFeedback.textContent = data.error || 'Invalid OTP.';
                    }
                } catch (error) {
                    otpFeedback.className = 'form-text text-danger';
                    otpFeedback.textContent = 'Error verifying OTP. Please try again.';
                }
                verifyOtpBtn.disabled = false;
            });

            // Handle form submission
            const form = document.querySelector('.signup-card form');
            if (form) {
                $(form).off('submit');
                $(form).on('submit', async function(e) {
                    e.preventDefault();
                    if (!otpVerified) {
                        otpFeedback.className = 'form-text text-danger';
                        otpFeedback.textContent = 'Please verify OTP first.';
                        return;
                    }

                    passwordFeedback.textContent = '';
                    currentPasswordFeedback.textContent = '';

                    const currentPassword = currentPasswordInput.value;
                    const newPassword = newPasswordInput.value;
                    const confirmPassword = confirmNewPasswordInput.value;

                    try {
                        const response = await fetch('/MyAccount/ChangePassword', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded'
                            },
                            body: `currentPassword=${encodeURIComponent(currentPassword)}&newPassword=${encodeURIComponent(newPassword)}&confirmPassword=${encodeURIComponent(confirmPassword)}`
                        });
                        const data = await response.json();
                        if (data.success) {
                            alert(data.message || 'Password updated successfully!');
                            window.location.href = '/MyAccount/MainPage?tab=Profile';
                        } else {
                            if (data.error.includes('current password')) {
                                currentPasswordFeedback.textContent = data.error;
                            } else {
                                passwordFeedback.textContent = data.error;
                            }
                        }
                    } catch (error) {
                        passwordFeedback.textContent = 'Error updating password. Please try again.';
                    }
                });
            }
        });
    </script>
}

<partial name="_ToastMessages" />
