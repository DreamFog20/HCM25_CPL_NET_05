@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "My Account";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar Tabs -->
        <div class="col-2 bg-light border-end vh-100 pt-3">
            <ul class="nav flex-column nav-pills" id="accountTabs">
                <li class="nav-item">
                    <a class="nav-link active" href="#" data-tab="Information">Information</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-tab="Profile">Profile</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-tab="Rank">Rank</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-tab="Score">Score</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-tab="Voucher">Voucher</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-tab="History">History Booking Ticket</a>
                </li>
            </ul>
        </div>

        <!-- Tab Content -->
        <div class="col-10 p-4">
            <div id="tabContent">
                Loading...
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function loadTab(tab) {
            $('#accountTabs .nav-link').removeClass('active');
            $(`#accountTabs .nav-link[data-tab="${tab}"]`).addClass('active');
            $('#tabContent').html('<h3>Loading...</h3>');

            var url = '@Url.Action("LoadTab", "MyAccount")';
            $.get(url, { tab: tab }, function (data) {
                $('#tabContent').html(data);
            });
        }

        $(function () {
            $('#accountTabs .nav-link').click(function (e) {
                e.preventDefault();
                loadTab($(this).data('tab'));
            });

            loadTab('@ViewData["ActiveTab"]' || 'Information');
        });

        // ✅ Submit AJAX Form
        $(document).on('submit', 'form', function (e) {
            e.preventDefault();

            var form = $(this);
            var url = form.attr('action');
            var formData = new FormData(this);

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (result) {
                    if (result.success) {
                        loadTab(result.reloadTab);
                        if (result.toast) showToast(result.toast);
                    } else if (result.error) {
                        showErrorToast(result.error); // ✅ Sửa: nằm trong success
                    } else {
                        $('#tabContent').html(result); // Partial chứa lỗi ModelState
                    }
                },
                error: function () {
                    $('#tabContent').html('<div class="text-danger">Lỗi không xác định từ server.</div>');
                }
            });

            // ❌ LOẠI BỎ đoạn này vì nằm ngoài success:
            // if (!result.success && result.error) { showErrorToast(result.error); }

            // ✅ Ẩn alert truyền thống nếu có (có thể giữ nếu bạn vẫn dùng alert)
            setTimeout(() => $(".alert").fadeOut("slow"), 3000);
        });

        // Toast hiển thị TempData
        document.addEventListener("DOMContentLoaded", function () {
            const toastEl = document.getElementById('toastMessage');
            if (toastEl && toastEl.querySelector('.toast-body').innerText.trim() !== "") {
                const toast = new bootstrap.Toast(toastEl, { delay: 3000 });
                toast.show();
            }
        });

        // ✅ Toast tiện ích
        function showToast(message) {
            const toastEl = document.getElementById('toastMessage');
            toastEl.querySelector('.toast-body').innerText = message;
            new bootstrap.Toast(toastEl, { delay: 3000 }).show();
        }

        function showErrorToast(message) {
            const errorToastEl = document.getElementById('errorToast');
            errorToastEl.querySelector('.toast-body').innerText = message;
            new bootstrap.Toast(errorToastEl, { delay: 4000 }).show();
        }
    </script>
}



