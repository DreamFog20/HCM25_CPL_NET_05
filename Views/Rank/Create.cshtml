@model MovieTheater.ViewModels.RankCreateViewModel
@{
    ViewData["Title"] = "Add New Rank";
}

<div class="container mt-4" style="max-width: 600px;">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Add New Rank</h3>
        </div>
        <div class="card-body">
            <form asp-action="CreateRank" asp-controller="Admin" method="post">
                <div class="mb-3">
                    <label asp-for="CurrentRankName" class="form-label">Rank Name</label>
                    <input asp-for="CurrentRankName" class="form-control" />
                    <span asp-validation-for="CurrentRankName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="RequiredPointsForCurrentRank" class="form-label">Required Points</label>
                    <input asp-for="RequiredPointsForCurrentRank" class="form-control" type="number" min="0" />
                    <span asp-validation-for="RequiredPointsForCurrentRank" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CurrentDiscountPercentage" class="form-label">Discount (%)</label>
                    <input asp-for="CurrentDiscountPercentage" class="form-control" type="number" step="0.01" min="0" max="100" />
                    <span asp-validation-for="CurrentDiscountPercentage" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CurrentPointEarningPercentage" class="form-label">Point Earning (%)</label>
                    <input asp-for="CurrentPointEarningPercentage" class="form-control" type="number" step="0.01" min="0" max="100" />
                    <span asp-validation-for="CurrentPointEarningPercentage" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">Color</label>
                    <button type="button" class="btn btn-outline-primary mb-2" data-bs-toggle="modal" data-bs-target="#colorPickerModal">Pick Color/Gradient</button>
                    <input asp-for="ColorGradient" class="form-control mt-2" placeholder="Pick a color or gradient" readonly />
                    <small class="form-text text-muted">Use the picker to select a color or gradient.</small>
                    <span asp-validation-for="ColorGradient" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">Icon</label>
                    <div class="form-group">
                        <div class="input-group">
                            <input 
                                id="IconClass" 
                                name="IconClass" 
                                type="text" 
                                class="form-control icp icp-auto" 
                                value="@Model.IconClass" 
                                data-placement="bottomRight" 
                                readonly />
                            <span class="input-group-append">
                                <button class="btn btn-outline-secondary" data-icon="@Model.IconClass" role="iconpicker" type="button"></button>
                            </span>
                        </div>
                        <span asp-validation-for="IconClass" class="text-danger"></span>
                    </div>
                </div>
                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("MainPage", "Admin", new { tab = "RankMg" })" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Rank Management
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Add Rank
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Color/Gradient Picker Modal OUTSIDE main body -->
<div class="modal fade" id="colorPickerModal" tabindex="-1" aria-labelledby="colorPickerModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="colorPickerModalLabel">Pick a Color or Gradient</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body p-0">
        @await Html.PartialAsync("~/Views/Shared/GradientColorPicker.cshtml")
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="confirmColorPick">Use Selected</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>

<partial name="_ToastMessages" />

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const iconBtns = document.querySelectorAll('.icon-btn');
            const iconInput = document.getElementById('IconClass');
            // Set default if not set
            if (!iconInput.value && iconBtns.length > 0) {
                iconBtns[0].classList.add('active');
                iconInput.value = iconBtns[0].getAttribute('data-icon');
            }
            iconBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    iconBtns.forEach(b => b.classList.remove('active'));
                    btn.classList.add('active');
                    iconInput.value = btn.getAttribute('data-icon');
                });
            });
            // Color picker confirm
            document.getElementById('confirmColorPick').onclick = function() {
                var gradientValue = document.getElementById('gradientString').value;
                document.getElementById('ColorGradient').value = gradientValue;
                var modal = bootstrap.Modal.getInstance(document.getElementById('colorPickerModal'));
                modal.hide();
            };
        });
    </script>
    <style>
        .icon-btn.active {
            border: 2px solid #007bff;
            background: #e7f1ff;
        }
        .icon-btn i {
            font-size: 1.5rem;
        }
    </style>
    <script>
        $(function () {
            $('[role="iconpicker"]').iconpicker({
                placement: 'bottomRight',
            }).on('iconpickerSelected', function (e) {
                $('#IconClass').val(e.iconpickerValue);
            });
        });
    </script>
} 