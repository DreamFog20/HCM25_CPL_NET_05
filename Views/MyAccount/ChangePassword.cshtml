@model MovieTheater.ViewModels.ProfileViewModel
@{
    ViewData["Title"] = "Change Password";
}

<div class="signup-wrapper py-4">
    <div class="signup-card p-4">
        <h2 class="signup-title text-center mb-4">Change Password</h2>
        <form asp-controller="MyAccount" asp-action="ChangePassword" method="post">
            <div class="form-group mb-4">
                <button type="button" class="btn btn-secondary w-100 mb-3" id="sendOtpBtn">Send OTP to Email</button>
                <div id="otpInputWrapper" style="display:none;">
                    <input type="text" class="form-control mb-2" id="otpInput" placeholder="Enter OTP" />
                    <span id="otpCountdown" class="form-text text-muted"></span>
                    <span id="otpFeedback" class="form-text text-danger"></span>
                    <button type="button" class="btn btn-primary mt-3 w-100" id="verifyOtpBtn">Verify OTP</button>
                </div>
            </div>

            <div id="newPasswordSection" style="display:none;" class="mt-4">
                <div class="form-group mb-3">
                    <label for="newPassword" class="form-label">New Password</label>
                    <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter new password" />
                </div>
                <div class="form-group mb-4">
                     <label for="confirmNewPassword" class="form-label">Confirm New Password</label>
                    <input type="password" class="form-control" id="confirmNewPassword" name="confirmPassword" placeholder="Confirm new password" />
                </div>
                <span id="passwordFeedback" class="form-text text-danger mb-3"></span>
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary px-4 py-2 rounded me-2">Change Password</button>
                <a href="@Url.Action("MainPage", "MyAccount", new { tab = "Profile" })" class="btn btn-secondary px-4 py-2 rounded">Back to Profile</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
<script>
$(function() {

const sendOtpBtn = document.getElementById('sendOtpBtn');

const otpInputWrapper = document.getElementById('otpInputWrapper');

const otpCountdown = document.getElementById('otpCountdown');

const verifyOtpBtn = document.getElementById('verifyOtpBtn');

const newPasswordSection = document.getElementById('newPasswordSection');

const otpFeedback = document.getElementById('otpFeedback');

const passwordFeedback = document.getElementById('passwordFeedback');

const newPasswordInput = document.getElementById('newPassword');

const confirmNewPasswordInput = document.getElementById('confirmNewPassword');

let countdownInterval;
let countdown = 60;

sendOtpBtn.addEventListener('click', async function() {
    sendOtpBtn.disabled = true;
    otpFeedback.textContent = '';
    try {
        const response = await fetch('/MyAccount/SendOtp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        const data = await response.json();
        if (data.success) {
            otpInputWrapper.style.display = 'block';
            countdown = 60;
            otpCountdown.textContent = ` (Resend in ${countdown}s)`;
            countdownInterval = setInterval(() => {
                countdown--;
                otpCountdown.textContent = ` (Resend in ${countdown}s)`;
                if (countdown <= 0) {
                    clearInterval(countdownInterval);
                    otpCountdown.textContent = '';
                    sendOtpBtn.disabled = false;
                }
            }, 1000);
        } else {
            otpFeedback.textContent = data.error || 'Failed to send OTP.';
            sendOtpBtn.disabled = false;
        }
    } catch (error) {
        otpFeedback.textContent = 'Error sending OTP. Please try again.';
        sendOtpBtn.disabled = false;
    }
});

verifyOtpBtn.addEventListener('click', async function() {
    otpFeedback.textContent = '';
    const otpInput = document.getElementById('otpInput').value;

    if (!otpInput) {
        otpFeedback.textContent = 'Please enter the OTP.';
        return;
    }
    verifyOtpBtn.disabled = true;
    try {
        const response = await fetch('/MyAccount/VerifyOtp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ otp: otpInput })
        });
        const data = await response.json();
        if (data.success) {
            otpFeedback.textContent = 'OTP correct!';
            otpInputWrapper.style.display = 'none';
            newPasswordSection.style.display = 'block';
        } else {
            otpFeedback.textContent = data.error || 'Incorrect OTP.';
            newPasswordSection.style.display = 'none';
        }
    } catch (error) {
        otpFeedback.textContent = 'Error verifying OTP. Please try again.';
    }
    verifyOtpBtn.disabled = false;
});

// Handle form submission
    const form = document.querySelector('.signup-card form'); // Changed selector
    if (form) { // Add a check to ensure form is not null
        $(form).off('submit'); // Remove any previously attached jQuery submit handlers
    }
});
</script>
} 