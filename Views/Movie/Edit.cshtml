@model MovieTheater.ViewModels.MovieDetailViewModel
@using System.Security.Claims
@using System

@{
    DateOnly todayDateOnly = DateOnly.FromDateTime(DateTime.Today);
    string minDateFormatted = todayDateOnly.ToString("yyyy-MM-dd");
    ViewData["Title"] = "Edit Movie";
    var userRole = User.FindFirst(ClaimTypes.Role)?.Value;
}

<link rel="stylesheet" href="~/css/movieedit.css" asp-append-version="true" />

<div class="signup-wrapper">
    <div class="signup-card">
        @if (userRole == "Admin")
        {
            <a asp-controller="Admin" asp-action="MainPage" asp-route-tab="MovieMg" class="btn btn-secondary mt-2" style="margin-left: 0.5rem">
                &larr; Return
            </a>
        }
        else
        {
            <a asp-controller="Employee" asp-action="MainPage" asp-route-tab="MovieMg" class="btn btn-secondary mt-2" style="margin-left: 0.5rem">
                &larr; Return
            </a>
        }

		<h2 class="signup-title">Movie Edit</h2>
        <form asp-controller="Movie" asp-action="Edit" asp-route-id="@Model.MovieId" method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="MovieId" />
            <input type="hidden" asp-for="LargeImage" />
            <input type="hidden" asp-for="SmallImage" />
            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="row">   
                <!-- Left Column: Image Uploads -->
                <div class="col">
                    <div class="form-group mb-3">
                        <strong>Small Image:</strong><br />
                        @if (!string.IsNullOrEmpty(Model.SmallImage))
                        {
                            <img id="smallImagePreview" src="@Url.Content(Model.SmallImage)" alt="@Model.MovieNameEnglish" width="200" height="250" style="display:block; margin-bottom:10px;" />
                        }
                        else
                        {
                            <img id="smallImagePreview" src="@Url.Content("/images/movies/default-movie.jpg")" alt="No image" width="200" height="250" style="display:block; margin-bottom:10px;" />
                        }
                        <input type="file" class="form-control" asp-for="SmallImageFile" onchange="previewImage(this, 'smallImagePreview')" />
                        <span asp-validation-for="SmallImageFile" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <strong>Large Image:</strong><br />
                        @if (!string.IsNullOrEmpty(Model.LargeImage))
                        {
                            <img id="largeImagePreview" src="@Url.Content(Model.LargeImage)" alt="@Model.MovieNameEnglish" width="200" height="250" style="display:block; margin-bottom:10px;" />
                        }
                        else
                        {
                            <img id="largeImagePreview" src="@Url.Content("/images/movies/default-movie.jpg")" alt="No image" width="200" height="250" style="display:block; margin-bottom:10px;" />
                        }
                        <input type="file" class="form-control" asp-for="LargeImageFile" onchange="previewImage(this, 'largeImagePreview')" />
                        <span asp-validation-for="LargeImageFile" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <strong>Logo:</strong><br />
                        @if (!string.IsNullOrEmpty(Model.Logo))
                        {
                            <img id="logoPreview" src="@Url.Content(Model.Logo)" alt="@Model.MovieNameEnglish" width="200" height="250" style="display:block; margin-bottom:10px;" />
                        }
                        else
                        {
                            <img id="logoPreview" src="@Url.Content("/images/movies/default-movie.jpg")" alt="No image" width="200" height="250" style="display:block; margin-bottom:10px;" />
                        }
                        <input type="file" class="form-control" asp-for="LogoFile" onchange="previewImage(this, 'logoPreview')" />
                        <span asp-validation-for="LogoFile" class="text-danger"></span>
                    </div>
                </div>

                <!-- Right Column: Movie Details -->
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <strong>Movie Name (EN):</strong>
                        <input type="text" class="form-control" asp-for="MovieNameEnglish" />
                        <span asp-validation-for="MovieNameEnglish" class="text-danger"></span>
                    </div>

                    <div class="row mb-3">
                        <div class="col">
                            <strong>From Date:</strong>
                            <input type="date" class="form-control" asp-for="FromDate" />
                            <span asp-validation-for="FromDate" class="text-danger"></span>
                        </div>
                        <div class="col">
                            <strong>To Date:</strong>
                            <input type="date" class="form-control" asp-for="ToDate" min="@minDateFormatted"/>
                            <span asp-validation-for="ToDate" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        <strong>Production Company:</strong>
                        <input type="text" class="form-control" asp-for="MovieProductionCompany" />
                        <span asp-validation-for="MovieProductionCompany" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <strong>Director</strong>
                        <div class="d-flex align-items-center">
                            <input type="text" class="form-control me-2" id="selectedDirectors" readonly placeholder="Selected directors will appear here" />
                            <button type="button" class="btn btn-primary" onclick="openDirectorPopup()">Select</button>
                        </div>
                        <input type="hidden" asp-for="SelectedDirectorIds" id="selectedDirectorIds" />
                        <span asp-validation-for="SelectedDirectorIds" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <strong>Actors</strong>
                        <div class="d-flex align-items-center">
                            <input type="text" class="form-control me-2" id="selectedActors" readonly placeholder="Selected actors will appear here" />
                            <button type="button" class="btn btn-primary" onclick="openActorPopup()">Select</button>
                        </div>
                        <input type="hidden" asp-for="SelectedActorIds" id="selectedActorIds" />
                        <span asp-validation-for="SelectedActorIds" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <strong>Duration:</strong>
                        <input type="number" class="form-control" asp-for="Duration" />
                        <span asp-validation-for="Duration" class="text-danger"></span>
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger mt-2 mb-0 p-2 text-center">
                                @TempData["ErrorMessage"]
                            </div>
                        }
                    </div>

                    <div class="form-group mb-3">
                        <strong>Version:</strong><br />
                        @foreach (var version in Model.AvailableVersions)
                        {
                            <label class="me-3">
                                <input type="checkbox"
                                       name="SelectedVersionIds"
                                       value="@version.VersionId"
                                       @(Model.SelectedVersionIds.Contains(version.VersionId) ? "checked" : "") />
                                @version.VersionName
                            </label>
                        }
                    </div>

                    <div class="form-group mb-3">
                        <strong>Types</strong><br />
                        @foreach (var type in Model.AvailableTypes)
                        {
                            <label class="me-3">
                                <input type="checkbox"
                                       name="SelectedTypeIds"
                                       value="@type.TypeId"
                                       @(Model.SelectedTypeIds.Contains(type.TypeId) ? "checked" : "") />
                                @type.TypeName
                            </label>
                        }
                    </div>
                </div>
            </div>

            <!-- Full-width description row below columns -->
            <div class="form-group mt-3">
                <strong>Movie Description / Content</strong>
                <textarea class="form-control" asp-for="Content"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            <h2 class="signup-title">Movie Trailer</h2>
            <div class="form-group mt-3">
                <strong>Trailer URL</strong>
                <input type="url" class="form-control" asp-for="TrailerUrl" />
                <span asp-validation-for="TrailerUrl" class="text-danger"></span>

                @if (!string.IsNullOrWhiteSpace(Model.TrailerUrl))
                {
                    <div class="video-container mb-4">
                        <iframe src="@Model.TrailerUrl" frameborder="0" allowfullscreen></iframe>
                    </div>
                }
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary px-4 py-2 rounded">Edit Movie</button>
            </div>
        </form>
    </div>
</div>

<script>
    function previewImage(input, previewId) {
        var preview = document.getElementById(previewId);
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.style.display = "block";
            }
            reader.readAsDataURL(input.files[0]);
        } else {
            preview.src = "#";
            preview.style.display = "none";
        }
    }
</script>

<!-- Director Selection Modal -->
<div class="modal fade" id="directorModal" tabindex="-1" aria-labelledby="directorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="directorModalLabel">Select Directors</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="search-container mb-3">
                    <input type="text" class="form-control" id="directorSearch" placeholder="Search directors..." onkeyup="filterDirectors()">
                </div>
                <div class="row" id="directorsList">
                    <!-- Directors will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="confirmDirectorSelection()">Confirm Selection</button>
            </div>
        </div>
    </div>
</div>

<!-- Actor Selection Modal -->
<div class="modal fade" id="actorModal" tabindex="-1" aria-labelledby="actorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="actorModalLabel">Select Actors</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="search-container mb-3">
                    <input type="text" class="form-control" id="actorSearch" placeholder="Search actors..." onkeyup="filterActors()">
                </div>
                <div class="row" id="actorsList">
                    <!-- Actors will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="confirmActorSelection()">Confirm Selection</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@section Styles {
    <link rel="stylesheet" href="~/css/movie-edit-styles.css" />
}
    <script>
        let selectedDirectors = [];
        let selectedActors = [];
        let allDirectors = [];
        let allActors = [];

        // Initialize selections from model
        $(document).ready(function() {
            const directorIds = '@Model.SelectedDirectorIds';
            const actorIds = '@Model.SelectedActorIds';
            
            if (directorIds) {
                selectedDirectors = directorIds.split(',');
                updateDirectorSelection();
            }
            
            if (actorIds) {
                selectedActors = actorIds.split(',');
                updateActorSelection();
            }
        });

        function openDirectorPopup() {
            $.get('/Movie/GetDirectors', function(data) {
                allDirectors = data;
                renderDirectors(data);
                $('#directorModal').modal('show');
            });
        }

        function openActorPopup() {
            $.get('/Movie/GetActors', function(data) {
                allActors = data;
                renderActors(data);
                $('#actorModal').modal('show');
            });
        }

        function renderDirectors(directors) {
            const directorsList = $('#directorsList');
            directorsList.empty();
            
            directors.forEach(director => {
                const directorCard = `
                    <div class="col-md-3 mb-3">
                        <div class="card director-card" data-id="${director.id}" data-name="${director.name.toLowerCase()}" onclick="toggleDirector(${director.id}, '${director.name}')">
                            <div class="selection-overlay">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <img src="${director.image || '/image/default-movie.png'}" class="card-img-top" alt="${director.name}">
                            <div class="card-body">
                                <h6 class="card-title">${director.name}</h6>
                            </div>
                        </div>
                    </div>
                `;
                directorsList.append(directorCard);
            });

            // Restore previously selected states
            selectedDirectors.forEach(id => {
                $(`.director-card[data-id="${id}"]`).addClass('selected');
            });
        }

        function renderActors(actors) {
            const actorsList = $('#actorsList');
            actorsList.empty();
            
            actors.forEach(actor => {
                const actorCard = `
                    <div class="col-md-3 mb-3">
                        <div class="card actor-card" data-id="${actor.id}" data-name="${actor.name.toLowerCase()}" onclick="toggleActor(${actor.id}, '${actor.name}')">
                            <div class="selection-overlay">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <img src="${actor.image || '/image/default-movie.png'}" class="card-img-top" alt="${actor.name}">
                            <div class="card-body">
                                <h6 class="card-title">${actor.name}</h6>
                            </div>
                        </div>
                    </div>
                `;
                actorsList.append(actorCard);
            });

            // Restore previously selected states
            selectedActors.forEach(id => {
                $(`.actor-card[data-id="${id}"]`).addClass('selected');
            });
        }

        function toggleDirector(id, name) {
            const index = selectedDirectors.indexOf(id.toString());
            const card = $(`.director-card[data-id="${id}"]`);
            
            if (index === -1) {
                selectedDirectors.push(id.toString());
                card.addClass('selected');
            } else {
                selectedDirectors.splice(index, 1);
                card.removeClass('selected');
            }
            
            updateDirectorSelection();
        }

        function toggleActor(id, name) {
            const index = selectedActors.indexOf(id.toString());
            const card = $(`.actor-card[data-id="${id}"]`);
            
            if (index === -1) {
                selectedActors.push(id.toString());
                card.addClass('selected');
            } else {
                selectedActors.splice(index, 1);
                card.removeClass('selected');
            }
            
            updateActorSelection();
        }

        function updateDirectorSelection() {
            $('#selectedDirectorIds').val(selectedDirectors.join(','));
            $('#selectedDirectors').val(selectedDirectors.length + ' director(s) selected');
        }

        function updateActorSelection() {
            $('#selectedActorIds').val(selectedActors.join(','));
            $('#selectedActors').val(selectedActors.length + ' actor(s) selected');
        }

        function filterDirectors() {
            const searchTerm = $('#directorSearch').val().toLowerCase();
            const filteredDirectors = allDirectors.filter(director => 
                director.name.toLowerCase().includes(searchTerm)
            );
            renderDirectors(filteredDirectors);
        }

        function filterActors() {
            const searchTerm = $('#actorSearch').val().toLowerCase();
            const filteredActors = allActors.filter(actor => 
                actor.name.toLowerCase().includes(searchTerm)
            );
            renderActors(filteredActors);
        }

        function confirmDirectorSelection() {
            $('#directorModal').modal('hide');
        }

        function confirmActorSelection() {
            $('#actorModal').modal('hide');
        }
    </script>
}