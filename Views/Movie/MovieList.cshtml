@model IEnumerable<MovieTheater.ViewModels.MovieViewModel>
@{
    ViewData["Title"] = "Movie List";
}

<link rel="stylesheet" href="~/css/movie-grid.css" />
<link rel="stylesheet" href="~/css/header-filters.css" />
<link rel="stylesheet" href="~/css/promotion.css" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet" />



<!-- Loading Overlay -->
<div id="loading-overlay" style="
    position: fixed;
    top: 0; left: 0;
    width: 100vw; height: 100vh;
    background-color: rgba(255,255,255,0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;">
    <div class="text-center">
        <div class="spinner-border text-primary" role="status"></div>
        <p class="mt-3">Loading...</p>
    </div>
</div>

<div id="content" style="display: none;">
    <div class="container mt-3">
        <header class="header d-flex justify-content-between align-items-center">
           <!-- <h1 class="header-title">Movie List</h1>-->
            
        </header>

        <div class="text-center my-4">
            <form asp-action="MovieList" method="get" class="d-flex justify-content-center gap-2">
                <div class="input-group" style="max-width: 600px;">
                    <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" maxlength="50" class="form-control" placeholder="🔍 Search by movies.." />
                </div>
            </form>
        </div>

        </header>

        @* CHUYỂN SANG TRANG PARTIAL VIEW *@
        <main class="movie-grid" id="movieGrid">
            @await Html.PartialAsync("_MovieGrid", Model)
        </main>

      

<partial name="_ToastMessages" />

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.cycle2/2.1.6/jquery.cycle2.min.js"></script>

    <script>
        // Ẩn loading và hiển thị nội dung sau khi trang đã render xong
        window.addEventListener("load", function () {
            document.getElementById("loading-overlay").style.display = "none";
            document.getElementById("content").style.display = "block";
        });

        const searchInput = document.querySelector("input[name='searchTerm']");
        let timeoutId;

        searchInput.addEventListener("input", function () {
            clearTimeout(timeoutId);

            timeoutId = setTimeout(() => {
                const searchTerm = searchInput.value;

                fetch(`/Movie/MovieList?searchTerm=${encodeURIComponent(searchTerm)}`, {
                    headers: {
                        "X-Requested-With": "XMLHttpRequest"
                    }
                })
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById("movieGrid").innerHTML = html;
                    });
            }, 300);
        });

      
    </script>
}
