@model IEnumerable<MovieTheater.ViewModels.MovieViewModel>
@{
    ViewData["Title"] = "Movie List";
}

<link rel="stylesheet" href="~/css/movie-grid.css">
<link rel="stylesheet" href="~/css/header-filters.css">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">

<!-- Loading Overlay -->
<div id="loading-overlay" style="
    position: fixed;
    top: 0; left: 0;
    width: 100vw; height: 100vh;
    background-color: rgba(255,255,255,0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;">
    <div class="text-center">
        <div class="spinner-border text-primary" role="status"></div>
        <p class="mt-3">Loading...</p>
    </div>
</div>

<div id="content" style="display: none;">

    <div class="container mt-3">
        <header class="header">
            <h1 class="header-title">Movie List</h1>
            <div class="text-center my-4">
                <form asp-action="MovieList" method="get" class="d-flex justify-content-center gap-2">
                    <div class="input-group" style="max-width: 600px;">
                        <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" maxlength="50" class="form-control" placeholder="🔍 Search by movies.." />
                        @* <button type="submit" class="btn btn-primary">Search</button> *@
                    </div>


                </form>
            </div>

        </header>

        <section class="filters">
            <h2 class="filter-title">Genres</h2>
            <div class="filter-tags">
                <button class="filter-tag" data-type="Action">Action</button>
                <button class="filter-tag" data-type="Comedy">Comedy</button>
                <button class="filter-tag" data-type="Drama">Drama</button>
                <button class="filter-tag" data-type="Horror">Horror</button>
                <button class="filter-tag" data-type="Sci-Fi">Sci-Fi</button>
                <button class="filter-tag" data-type="Romance">Romance</button>
                <button class="filter-tag" data-type="Thriller">Thriller</button>
                <button class="filter-tag" data-type="Documentary">Documentary</button>
                <button class="filter-tag" data-type="Animation">Animation</button>
            </div>
        </section>
        @* CHUYỂN SANG TRANG PARTIAL VIEW *@
        <main class="movie-grid" id="movieGrid">
            @await Html.PartialAsync("_MovieGrid", Model)
        </main>

    </div>
</div>

<partial name="_ToastMessages" />

@section Scripts {
    <script>
        // Ẩn loading và hiển thị nội dung sau khi trang đã render xong
        window.addEventListener("load", function () {
            document.getElementById("loading-overlay").style.display = "none";
            document.getElementById("content").style.display = "block";
        });

        const searchInput = document.querySelector("input[name='searchTerm']");
        let timeoutId;

        searchInput.addEventListener("input", function () {
            clearTimeout(timeoutId);

            timeoutId = setTimeout(() => {
                const searchTerm = searchInput.value;

                fetch(`/Movie/MovieList?searchTerm=${encodeURIComponent(searchTerm)}`, {
                    headers: {
                        "X-Requested-With": "XMLHttpRequest"
                    }
                })
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById("movieGrid").innerHTML = html;
                    });
            }, 300);
        });
    </script>
}

