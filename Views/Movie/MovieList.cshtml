@model IEnumerable<MovieTheater.ViewModels.MovieViewModel>
@{
    ViewData["Title"] = "Movie List";
}

<link rel="stylesheet" href="~/css/movie-grid.css">
<link rel="stylesheet" href="~/css/header-filters.css">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">

<!-- Loading Overlay -->
<div id="loading-overlay" style="
    position: fixed;
    top: 0; left: 0;
    width: 100vw; height: 100vh;
    background-color: rgba(255,255,255,0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;">
    <div class="text-center">
        <div class="spinner-border text-primary" role="status"></div>
        <p class="mt-3">Loading...</p>
    </div>
</div>

<div id="content" style="display: none;">

    <div class="container mt-3">
        <header class="header">
            <h1 class="header-title">Movie List</h1>
            <div class="text-center my-4">
                <form asp-action="MovieList" method="get" class="d-flex justify-content-center gap-2">
                    <div class="input-group" style="max-width: 600px;">
                        <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" maxlength="50" class="form-control" placeholder="🔍 Search by movies.." />
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>

                   
                </form>
            </div>

        </header>



        <section class="filters">
            <h2 class="filter-title">Genres</h2>
            <div class="filter-tags">
                <button class="filter-tag" data-type="Action">Action</button>
                <button class="filter-tag" data-type="Comedy">Comedy</button>
                <button class="filter-tag" data-type="Drama">Drama</button>
                <button class="filter-tag" data-type="Horror">Horror</button>
                <button class="filter-tag" data-type="Sci-Fi">Sci-Fi</button>
                <button class="filter-tag" data-type="Romance">Romance</button>
                <button class="filter-tag" data-type="Thriller">Thriller</button>
                <button class="filter-tag" data-type="Documentary">Documentary</button>
                <button class="filter-tag" data-type="Animation">Animation</button>
            </div>
        </section>

        <main class="movie-grid">
            @if (!Model.Any())
            {
                <div class="text-center w-100">
                    <h3>No movies found</h3>
                </div>
            }
            else
            {
                @foreach (var movie in Model)
                {
                    <a href="@Url.Action("Detail", "Movie", new { id = movie.MovieId })" class="text-decoration-none text-reset">
                        <div class="movie-card">
                            <div class="movie-poster">
                                <img src="@Url.Content(movie.SmallImage)" alt="@movie.MovieNameEnglish">
                            </div>
                            <div class="movie-info">
                                <h3 class="movie-title">@movie.MovieNameEnglish</h3>

                                <div>
                                    @foreach (var type in movie.Types)
                                    {
                                        <div class="badge bg-secondary">@type.TypeName</div>
                                    }
                                </div>
                                <div class="movie-duration mt-2">
                                    <svg class="duration-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M12 6V12L16 14M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                    </svg>
                                    <span>@movie.Duration min</span>
                                </div>
                            </div>
                        </div>
                    </a>
                }
            }
        </main>
    </div>
</div>

<partial name="_ToastMessages" />

@section Scripts {
    <script>
        window.addEventListener("load", function () {
            // Simulate fetching delay
            setTimeout(function () {
                document.getElementById('loading-overlay').style.display = 'none';
                document.getElementById('content').style.display = 'block';
            }, 500); // Simulate 1.5 seconds fetch
        });
    </script>
}
