@model IEnumerable<MovieTheater.Models.Invoice>
@inject MovieTheater.Service.IAccountService AccountService
@{
    ViewData["Title"] = "Booking Management";

    var now = DateTime.Now;

    var totalBookings = Model.Count();

    var completed = Model.Count(b => b.Status == MovieTheater.Models.InvoiceStatus.Completed && !b.Cancel);

    var cancelled = Model.Count(b => b.Status == MovieTheater.Models.InvoiceStatus.Completed && b.Cancel);

    var notPaid = Model.Count(b => b.Status != MovieTheater.Models.InvoiceStatus.Completed);
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Booking Management</h2>
        <a href="@Url.Action("InitiateTicketSellingForMember", "Booking", new { id = "admin", returnUrl = Url.Action("MainPage", "Admin", new { tab = "BookingMg" }) })" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Sell Ticket
        </a>
    </div>

    <!-- Search and Filter Section -->
    <div class="card mb-4">
        <div class="card-body">
            <form id="bookingSearchForm" onsubmit="searchBookings(); return false;">
                <div class="row g-3">
                    <div class="col-md-6">
                        <input type="text" class="form-control" id="searchKeyword" name="keyword"
                               placeholder="Search by Booking ID, Account ID, Phone, Identity Card..." value="@ViewBag.Keyword">
                    </div>
                    <div class="col-md-2">
                        <select class="form-select" id="statusFilter" name="statusFilter">
                            @if (string.IsNullOrEmpty(ViewBag.StatusFilter?.ToString()))
                            {
                                <option value="" selected>All Status</option>
                            }
                            else
                            {
                                <option value="">All Status</option>
                            }
                            @if (ViewBag.StatusFilter?.ToString() == "completed")
                            {
                                <option value="completed" selected>Completed</option>
                            }
                            else
                            {
                                <option value="completed">Completed</option>
                            }
                            @if (ViewBag.StatusFilter?.ToString() == "cancelled")
                            {
                                <option value="cancelled" selected>Cancelled</option>
                            }
                            else
                            {
                                <option value="cancelled">Cancelled</option>
                            }
                            @if (ViewBag.StatusFilter?.ToString() == "notpaid")
                            {
                                <option value="notpaid" selected>Not Paid</option>
                            }
                            else
                            {
                                <option value="notpaid">Not Paid</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-outline-primary w-100">
                            <i class="bi bi-search"></i> Search
                        </button>
                    </div>
                    <div class="col-md-2">
                        <a href="#" onclick="resetFilters(); return false;" class="btn btn-outline-secondary w-100">
                            <i class="bi bi-arrow-clockwise"></i> Reset
                        </a>
                    </div>
                </div>
                <div class="row g-3 mt-1">
                    <div class="col-md-6">
                                                 <div class="form-check form-check-inline">
                             <input class="form-check-input" type="radio" name="bookingTypeFilter" id="allBookings" value="all" @(ViewBag.CurrentBookingTypeFilter == "all" || string.IsNullOrEmpty(ViewBag.CurrentBookingTypeFilter) ? "checked" : "")>
                             <label class="form-check-label" for="allBookings">All Bookings</label>
                         </div>
                         <div class="form-check form-check-inline">
                             <input class="form-check-input" type="radio" name="bookingTypeFilter" id="normalBookings" value="normal" @(ViewBag.CurrentBookingTypeFilter == "normal" ? "checked" : "")>
                             <label class="form-check-label" for="normalBookings">Normal Bookings</label>
                         </div>
                         <div class="form-check form-check-inline">
                             <input class="form-check-input" type="radio" name="bookingTypeFilter" id="employeeBookings" value="employee" @(ViewBag.CurrentBookingTypeFilter == "employee" ? "checked" : "")>
                             <label class="form-check-label" for="employeeBookings">Employee Bookings</label>
                         </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4" id="statisticsCards">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0" id="totalBookingsCount">@totalBookings</h4>
                            <p class="mb-0">Total Bookings</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-ticket-perforated fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0" id="completedCount">@completed</h4>
                            <p class="mb-0">Completed</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-check-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0" id="cancelledCount">@cancelled</h4>
                            <p class="mb-0">Cancelled</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-x-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-secondary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="mb-0" id="notPaidCount">@notPaid</h4>
                            <p class="mb-0">Not Paid</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-hourglass-split fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Booking List -->
    <div class="card">
        <div class="card-body">
            <div id="bookingResult">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3">Loading bookings...</p>
                </div>
            </div>
            <nav id="bookingPagination" class="mt-3"></nav>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/admin-styles.css" />
}

<script>
    $(function() {
        let bookingDataCache = [];
        let currentPage = 1;
        const pageSize = 10;

        // Function to load booking data
        function loadBookings(keyword, statusFilter, bookingTypeFilter, page = 1) {
            // Show loading state
            $('#bookingSearchForm button[type="submit"]').prop('disabled', true);
            $('#bookingSearchForm button[type="submit"]').html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...');
            
            // Add loading state to pagination
            $('#bookingPagination').addClass('loading');
            
            $.ajax({
                url: '/Admin/BookingMgPartial',
                type: 'GET',
                data: { 
                    keyword: keyword, 
                    statusFilter: statusFilter, 
                    bookingTypeFilter: bookingTypeFilter,
                    page: page,
                    pageSize: pageSize
                },
                success: function (response) {
                    if (response.success) {
                        currentPage = page;
                        bookingDataCache = response.data;
                        renderBookingTable(response.data);
                        renderBookingPagination(response.pagination);
                        updateStatistics(response.statistics);
                        
                        // Scroll to top of results if page changed
                        if (page > 1) {
                            $('#bookingResult').get(0).scrollIntoView({ 
                                behavior: 'smooth', 
                                block: 'start' 
                            });
                        }
                    } else {
                        $('#bookingResult').html('<div class="alert alert-danger"><i class="fas fa-exclamation-triangle"></i> ' + response.message + '</div>');
                    }
                },
                error: function () {
                    $('#bookingResult').html('<div class="alert alert-danger"><i class="fas fa-exclamation-triangle"></i> Error loading data.</div>');
                },
                complete: function() {
                    // Reset button state
                    $('#bookingSearchForm button[type="submit"]').prop('disabled', false);
                    $('#bookingSearchForm button[type="submit"]').html('<i class="bi bi-search"></i> Search');
                    
                    // Remove loading state from pagination
                    $('#bookingPagination').removeClass('loading');
                }
            });
        }

        // Function to render booking table
        function renderBookingTable(bookingData) {
            if (bookingData.length > 0) {
                let html = '<div class="table-responsive"><table id="booking-table" class="table table-hover">';
                html += '<thead class="table-light"><tr>';
                html += '<th class="text-center sortable" data-sort="id">Booking ID <span id="sortIconId"></span></th>';
                html += '<th class="text-start sortable" data-sort="movie">Movie Name <span id="sortIconMovie"></span></th>';
                html += '<th class="text-center sortable" data-sort="account">Account ID <span id="sortIconAccount"></span></th>';
                html += '<th class="text-end sortable" data-sort="identity">Identity Card <span id="sortIconIdentity"></span></th>';
                html += '<th class="text-end sortable" data-sort="phone">Phone Number <span id="sortIconPhone"></span></th>';
                html += '<th class="text-end sortable" data-sort="time">Schedule Time <span id="sortIconTime"></span></th>';
                html += '<th class="text-center">Status</th>';
                html += '<th class="text-center">Actions</th>';
                html += '</tr></thead><tbody>';

                bookingData.forEach(function(booking) {
                    let statusBadge = '';
                    if (booking.status === 'Completed' && !booking.cancel) {
                        statusBadge = '<span class="badge bg-success"><i class="bi bi-check-circle me-1"></i>Completed</span>';
                    } else if (booking.status === 'Completed' && booking.cancel) {
                        statusBadge = '<span class="badge bg-danger"><i class="bi bi-x-circle me-1"></i>Cancelled</span>';
                    } else {
                        statusBadge = '<span class="badge bg-secondary"><i class="bi bi-hourglass-split me-1"></i>Not Paid</span>';
                    }

                    html += '<tr class="text-center booking-row">';
                    html += '<td class="text-center">' + booking.invoiceId + '</td>';
                    html += '<td class="text-start">' + booking.movieName + '</td>';
                    html += '<td class="text-center">' + booking.accountId + '</td>';
                    html += '<td class="text-end">' + booking.identityCard + '</td>';
                    html += '<td class="text-end">' + booking.phoneNumber + '</td>';
                    html += '<td class="text-end">' + booking.scheduleTime + '</td>';
                    html += '<td class="text-center">' + statusBadge + '</td>';
                    html += '<td class="text-center">';
                    html += '<a href="/Booking/TicketInfo?invoiceId=' + booking.invoiceId + '" class="btn btn-sm btn-info">';
                    html += '<i class="fas fa-info-circle"></i> Details';
                    html += '</a>';
                    html += '</td>';
                    html += '</tr>';
                });

                html += '</tbody></table></div>';
                $('#bookingResult').html(html);
            } else {
                $('#bookingResult').html('<div class="text-center py-4"><i class="bi bi-emoji-frown display-1 text-muted"></i><h4 class="text-muted mt-3">No bookings found</h4><p class="text-muted">Try adjusting your search criteria or add a new booking.</p></div>');
            }
        }

        // Function to render pagination
        function renderBookingPagination(pagination) {
            const totalPages = pagination.totalPages;
            if (totalPages <= 1) {
                $('#bookingPagination').html('');
                return;
            }
            
            // Calculate visible pages with ellipsis
            const maxVisiblePages = 7;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
            
            if (endPage - startPage + 1 < maxVisiblePages) {
                startPage = Math.max(1, endPage - maxVisiblePages + 1);
            }
            
            let html = '<div class="pagination-container">';
            html += '<ul class="pagination justify-content-center">';
            
            // Previous button
            html += `<li class="page-item${currentPage === 1 ? ' disabled' : ''}">`;
            html += `<a class="page-link" href="#" data-page="${currentPage - 1}"><i class="fas fa-chevron-left"></i></a>`;
            html += '</li>';
            
            // First page + ellipsis
            if (startPage > 1) {
                html += '<li class="page-item"><a class="page-link" href="#" data-page="1">1</a></li>';
                if (startPage > 2) {
                    html += '<li class="page-item disabled"><span class="page-link">...</span></li>';
                }
            }
            
            // Visible pages
            for (let i = startPage; i <= endPage; i++) {
                html += `<li class="page-item${currentPage === i ? ' active' : ''}">`;
                html += `<a class="page-link" href="#" data-page="${i}">${i}</a>`;
                html += '</li>';
            }
            
            // Last page + ellipsis
            if (endPage < totalPages) {
                if (endPage < totalPages - 1) {
                    html += '<li class="page-item disabled"><span class="page-link">...</span></li>';
                }
                html += `<li class="page-item"><a class="page-link" href="#" data-page="${totalPages}">${totalPages}</a></li>`;
            }
            
            // Next button
            html += `<li class="page-item${currentPage === totalPages ? ' disabled' : ''}">`;
            html += `<a class="page-link" href="#" data-page="${currentPage + 1}"><i class="fas fa-chevron-right"></i></a>`;
            html += '</li>';
            
            html += '</ul>';
            html += '</div>';
            
            $('#bookingPagination').html(html);
            $('#bookingPagination .page-link').off('click').on('click', function (e) {
                e.preventDefault();
                const page = parseInt($(this).data('page'));
                if (!isNaN(page) && page >= 1 && page <= totalPages && page !== currentPage) {
                    const keyword = $('#searchKeyword').val();
                    const statusFilter = $('#statusFilter').val();
                    const bookingTypeFilter = $('input[name="bookingTypeFilter"]:checked').val();
                    loadBookings(keyword, statusFilter, bookingTypeFilter, page);
                }
            });
        }

        // Function to update statistics
        function updateStatistics(statistics) {
            $('#totalBookingsCount').text(statistics.totalBookings);
            $('#completedCount').text(statistics.completed);
            $('#cancelledCount').text(statistics.cancelled);
            $('#notPaidCount').text(statistics.notPaid);
        }

        // Handle form submit
        $('#bookingSearchForm').on('submit', function(e) {
            e.preventDefault();
            const keyword = $('#searchKeyword').val();
            const statusFilter = $('#statusFilter').val();
            const bookingTypeFilter = $('input[name="bookingTypeFilter"]:checked').val();
            loadBookings(keyword, statusFilter, bookingTypeFilter, 1);
        });

        // Handle reset filters
        window.resetFilters = function() {
            $('#searchKeyword').val('');
            $('#statusFilter').val('');
            $('input[name="bookingTypeFilter"][value="all"]').prop('checked', true);
            loadBookings('', '', 'all', 1);
        };

        // Handle search bookings
        window.searchBookings = function() {
            const keyword = $('#searchKeyword').val();
            const statusFilter = $('#statusFilter').val();
            const bookingTypeFilter = $('input[name="bookingTypeFilter"]:checked').val();
            loadBookings(keyword, statusFilter, bookingTypeFilter, 1);
        };

        // Load initial data
        loadBookings('', '', 'all', 1);
    });
</script>

<style>
/* Pagination Styles - Improved */
.pagination-container {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 0;
}

.pagination {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-wrap: nowrap;
    margin: 0;
    padding: 0;
    list-style: none;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 15px;
    padding: 0.5rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.page-item {
    margin: 0;
    position: relative;
}

.page-link {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: #fff;
    border-radius: 12px;
    padding: 0.75rem 1rem;
    min-width: 45px;
    height: 45px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
}

.page-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
}

.page-link:hover::before {
    left: 100%;
}

.page-link:hover {
    background: linear-gradient(135deg, rgba(212, 175, 55, 0.2) 0%, rgba(244, 208, 63, 0.1) 100%);
    border-color: #d4af37;
    color: #d4af37;
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 8px 25px rgba(212, 175, 55, 0.3);
}

.page-item.active .page-link {
    background: linear-gradient(135deg, #d4af37 0%, #f4d03f 100%);
    border-color: #d4af37;
    color: #000;
    font-weight: 700;
    transform: translateY(-3px) scale(1.1);
    box-shadow: 0 8px 25px rgba(212, 175, 55, 0.4);
    animation: activePulse 2s infinite;
}

@@keyframes activePulse {
    0%, 100% {
        box-shadow: 0 8px 25px rgba(212, 175, 55, 0.4);
    }
    50% {
        box-shadow: 0 8px 25px rgba(212, 175, 55, 0.6);
    }
}

.page-item.disabled .page-link {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.3);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.page-item.disabled .page-link:hover {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.3);
    transform: none;
    box-shadow: none;
}

/* Ellipsis styling - Improved */
.page-item.disabled .page-link:not(.page-link[data-page]) {
    background: transparent;
    border: none;
    color: rgba(255, 255, 255, 0.6);
    font-weight: 700;
    font-size: 1.2rem;
    padding: 0.5rem;
    min-width: auto;
    height: auto;
    position: relative;
    animation: ellipsisPulse 2s infinite;
}

@@keyframes ellipsisPulse {
    0%, 100% {
        opacity: 0.6;
    }
    50% {
        opacity: 1;
    }
}

.page-item.disabled .page-link:not(.page-link[data-page]):hover {
    background: transparent;
    border: none;
    color: rgba(255, 255, 255, 0.6);
    transform: none;
    box-shadow: none;
}

/* Navigation arrows - Enhanced */
.page-link i {
    transition: transform 0.3s ease;
}

.page-link:hover i {
    transform: scale(1.2);
}

/* Previous/Next buttons special styling */
.page-item:first-child .page-link,
.page-item:last-child .page-link {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%);
    border-color: rgba(255, 255, 255, 0.3);
    font-weight: 700;
}

.page-item:first-child .page-link:hover,
.page-item:last-child .page-link:hover {
    background: linear-gradient(135deg, rgba(212, 175, 55, 0.3) 0%, rgba(244, 208, 63, 0.2) 100%);
    border-color: #d4af37;
    color: #d4af37;
}

/* Responsive Design - Improved */
@@media (max-width: 768px) {
    .pagination {
        gap: 0.25rem;
        padding: 0.4rem;
        border-radius: 12px;
    }
    
    .page-link {
        padding: 0.5rem 0.75rem;
        min-width: 40px;
        height: 40px;
        font-size: 0.85rem;
        border-radius: 10px;
    }
    
    .page-item.disabled .page-link:not(.page-link[data-page]) {
        padding: 0.25rem;
        font-size: 1rem;
    }
}

@@media (max-width: 480px) {
    .pagination {
        gap: 0.2rem;
        padding: 0.3rem;
        border-radius: 10px;
    }
    
    .page-link {
        padding: 0.4rem 0.6rem;
        min-width: 35px;
        height: 35px;
        font-size: 0.8rem;
        border-radius: 8px;
    }
    
    .page-item.disabled .page-link:not(.page-link[data-page]) {
        padding: 0.2rem;
        font-size: 0.9rem;
    }
}

/* Dark theme compatibility */
@@media (prefers-color-scheme: dark) {
    .pagination {
        background: rgba(0, 0, 0, 0.3);
        border-color: rgba(255, 255, 255, 0.1);
    }
    
    .page-link {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
        border-color: rgba(255, 255, 255, 0.2);
        color: #fff;
    }
}

/* Loading state for pagination */
.pagination.loading {
    opacity: 0.7;
    pointer-events: none;
}

.pagination.loading .page-link {
    animation: loadingShimmer 1.5s infinite;
}

@@keyframes loadingShimmer {
    0% {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
    }
    50% {
        background: linear-gradient(135deg, rgba(212, 175, 55, 0.2) 0%, rgba(244, 208, 63, 0.1) 100%);
    }
    100% {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
    }
}

/* Focus states for accessibility */
.page-link:focus {
    outline: 2px solid #d4af37;
    outline-offset: 2px;
}

/* Smooth transitions for all interactive elements */
.page-item {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Hover effect for the entire pagination container */
.pagination:hover {
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
    transform: translateY(-1px);
}

/* Custom scrollbar for pagination container if needed */
.pagination-container::-webkit-scrollbar {
    height: 6px;
}

.pagination-container::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
}

.pagination-container::-webkit-scrollbar-thumb {
    background: rgba(212, 175, 55, 0.5);
    border-radius: 3px;
}

.pagination-container::-webkit-scrollbar-thumb:hover {
    background: rgba(212, 175, 55, 0.7);
}
</style>
