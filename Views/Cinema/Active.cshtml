@model MovieTheater.Models.CinemaRoom

@{
    string currentDateTimeMin = DateTime.Now.ToString("yyyy-MM-ddTHH:mm");
    // currentTodayMin is not used in this specific form, but kept for context if needed elsewhere.
    // string currentTodayMin = DateTime.Today.ToString("yyyy-MM-dd");

    // Prepare existing values for pre-population, formatting DateTime? for datetime-local
    string existingDisableReason = Model.DisableReason ?? ""; // Use null-coalescing for string
    string existingStartDate = Model.UnavailableStartDate.HasValue
                               ? Model.UnavailableStartDate.Value.ToString("yyyy-MM-ddTHH:mm")
                               : "";
    string existingEndDate = Model.UnavailableEndDate.HasValue
                             ? Model.UnavailableEndDate.Value.ToString("yyyy-MM-ddTHH:mm")
                             : "";
}
<a asp-controller="Admin" asp-action="MainPage" asp-route-tab="ShowroomMg" class="btn btn-secondary mb-2 mt-2 ml-4">
    &larr; Return
</a>
<div class="text-center">
    <h3>Disable @Model.CinemaRoomName</h3>
</div>

<div class="row">
    <div class="col-md-2"></div>
    <div class="container mt-3 mb-1 col-md-3">
        <form asp-action="Active" asp-controller="Cinema" method="post">
            <input type="hidden" id="cinemaRoomId" name="cinemaRoomId" value="@Model.CinemaRoomId" />

            <div class="mb-4">
                <label class="form-label booking-label">Reason</label>
                <input type="text" id="disableReason" name="disableReason" class="form-control" required
                       value="@existingDisableReason" /> <!-- ADDED value attribute -->
                <span asp-validation-for="DisableReason" class="text-danger"></span>
            </div>

            <div class="mb-4">
                <label class="form-label booking-label">Start Date</label>
                <input type="datetime-local" id="unavailableStartDate" name="unavailableStartDate" class="form-control mt-2"
                       min="@currentDateTimeMin"
                       value="@existingStartDate" /> <!-- ADDED value attribute -->
            </div>

            <div class="mb-4">
                <label class="form-label booking-label">End Date</label>
                <input type="datetime-local" id="unavailableEndDate" name="unavailableEndDate" class="form-control" required
                       min="@currentDateTimeMin"
                       value="@existingEndDate" /> <!-- ADDED value attribute -->
            </div>
        </form>
    </div>
    <div class="container mt-3 mb-1 col-md-4">
        <div class="text-center">
            <label>Movie Shows</label>
        </div>
        <div id="movieShowsByDate" style="margin-left: 10px"></div>
    </div>
    <div class="col-md-2"></div>
</div>

<div class="col-12 d-flex justify-content-center gap-2 mt-4">
    <button type="submit" class="btn booking-btn-gradient mt-4" style="width: 300px">
        <span>Disable This Room</span> <i class="fas fa-arrow-right ms-2"></i>
    </button>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            var cinemaRoomId = '@Model.CinemaRoomId';
            // Add border to movie shows container if it's missing from style attribute
            $('#movieShowsByDate');

            $.get('/Cinema/GetMovieShowsByCinemaRoomGrouped', { cinemaRoomId: cinemaRoomId }, function(data) {
                var container = $('#movieShowsByDate');
                if (!data || data.length === 0) {
                    container.html('<div class="text-muted">No shows found for this room.</div>');
                    return;
                }
                var html = '';
                data.forEach(function(group) {
                    html += '<div class="mb-2">';
                    html += '<strong>' + group.date + '</strong><br/>';
                    group.times.forEach(function(time) {
                        html += '<span class="badge bg-primary me-1">' + time + '</span>';

                    });
                    html += '</div>';
                });
                container.html(html);
            }).fail(function() {
                $('#movieShowsByDate').html('<div class="text-danger">Error loading movie shows.</div>');
            });

            // Client-side date validation for better UX
            $('#unavailableStartDate, #unavailableEndDate').on('change', function() {
                var startDateStr = $('#unavailableStartDate').val();
                var endDateStr = $('#unavailableEndDate').val();

                if (startDateStr && endDateStr) {
                    var startDate = new Date(startDateStr);
                    var endDate = new Date(endDateStr);

                    if (endDate <= startDate) {
                        alert('End Date and Time must be after Start Date and Time.');
                        $('#unavailableEndDate').val(''); // Clear end date if invalid
                    }
                }
            });
        });
    </script>
}
