@model MovieTheater.ViewModels.SeatSelectionViewModel
@{
    ViewBag.CurrentStep = 2;
}

@Html.Partial("_BookingProgress")

<link rel="stylesheet" href="~/css/seat.css" asp-append-version="true" />
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

@{
    var movieId = Model.MovieId;

    var date = Model.ShowDate;

    var time = Model.ShowTime;

    var bookedSeats = ViewBag.BookedSeats as List<int> ?? new List<int>();

    var returnUrl = Model.ReturnUrl ?? (movieId != null ? $"/Movie/Detail/{movieId}" : "/Admin");

    var seatTypes = Model.SeatTypes;

    var movieShow = ViewBag.MovieShow as MovieTheater.Models.MovieShow;

    var movieShowId = Model.MovieShowId.ToString();

    var isAdminSell = Context.Request.Query["isAdminSell"] == "true";

    string returnLink;
    if (isAdminSell)
    {
        // Nếu có returnUrl từ parameter thì dùng, không thì về trang trước đó
        if (!string.IsNullOrEmpty(Model.ReturnUrl))
        {
            returnLink = Model.ReturnUrl;
        }
        else
        {
            // Default return về trang trước đó dựa trên role
            if (User.IsInRole("Admin"))
            {
                returnLink = Url.Action("MainPage", "Admin", new { tab = "BookingMg" });
            }
            else if (User.IsInRole("Employee"))
            {
                returnLink = Url.Action("MainPage", "Employee", new { tab = "TicketSellingMg" });
            }
            else
            {
                returnLink = Url.Action("Select", "Showtime", new { area = "Admin" });
            }
        }
    }
    else
    {
        returnLink = "/#booking-widget";
    }

    var coupleSeatPairs = new Dictionary<int, int>();

    if (ViewBag.CoupleSeats != null)

    {

        foreach (var couple in (List<MovieTheater.Models.CoupleSeat>)ViewBag.CoupleSeats)

        {

            coupleSeatPairs[couple.FirstSeatId] = couple.SecondSeatId;

            coupleSeatPairs[couple.SecondSeatId] = couple.FirstSeatId;

        }

    }

    var isAuthenticated = User.Identity.IsAuthenticated;

    bool isCompactSeatMap = Model.SeatWidth > 9 || Model.SeatLength > 9;
}

<div class="cinema-container" @(isAuthenticated ? "" : "style='display:none;'")>
    <!-- Header Section -->
    <div class="cinema-header">
        <div class="header-content">
            <a href="@returnLink" class="back-btn">
                <span class="material-icons">arrow_back</span>
                <span>Back</span>
            </a>
            <h1 class="page-title">Select Your Seats</h1>
        </div>
    </div>

    <!-- Movie Info Card -->
    <div class="movie-info-card">
        <div class="movie-poster1">
            @if (!string.IsNullOrEmpty(Model.MoviePoster))
            {
                <img src="@Model.MoviePoster" alt="@Model.MovieName" />
            }
        </div>
        <div class="movie-details">
            <h2 class="movie-title">@Model.MovieName</h2>
            <p class="movie-description">@Model.MovieContent</p>
            <div class="movie-meta">
                <div class="meta-item">
                    <span class="meta-label">Director:</span>
                    <span class="meta-value">@Model.MovieDirector</span>
                </div>
                <div class="meta-item">
                    <span class="meta-label">Starring:</span>
                    <span class="meta-value">@Model.MovieActor</span>
                </div>
                <div class="meta-item">
                    <span class="meta-label">Genre:</span>
                    <span class="meta-value">@Model.MovieGenre</span>
                </div>
                <div class="meta-item">
                    <span class="meta-label">Duration:</span>
                    <span class="meta-value">@(Model.MovieDuration ?? 0) min</span>
                </div>
               
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content" id="mainBookingArea">
        <div class="content-wrapper">
            <!-- Seat Selection Area -->
            <div class="seat-area">
                <div class="seat-selection-section" id="seatSelectionArea">
                    <!-- Screen -->
                    <div class="screen-container">
                        <div class="screen">
                            <span>SCREEN</span>
                        </div>
                    </div>

                    <!-- Seat Map -->
                    <div class="seat-map-container @(isCompactSeatMap ? "compact" : "")">
                        <div class="seat-grid">
                            @for (int row = 1; row <= Model.SeatLength; row++)

                            {
                                <div class="seat-row" data-row="@row">
                                    <div class="row-label">@((char)('A' + row - 1))</div>
                                    <div class="seats">
                                        @for (int col = 1; col <= Model.SeatWidth; col++)

                                        {

                                            var seat = Model.Seats.FirstOrDefault(s => s.SeatRow == row && s.SeatColumn == col.ToString());

                                            if (seat != null)

                                            {

                                                var seatType = seatTypes?.FirstOrDefault(st => st.SeatTypeId == seat.SeatTypeId);

                                                bool isDisabledType = seatType?.TypeName == "Disabled";

                                                bool isBooked = bookedSeats.Contains(seat.SeatId);

                                                var versionMulti = ViewBag.MovieShow?.Version?.Multi ?? 1m;

                                                // PricePercent is the actual price in thousands (e.g., 40 = 40,000 VND)
                                                var basePrice = seatType?.PricePercent ?? 0;

                                                var calculatedPrice = basePrice * versionMulti;

                                                if (isDisabledType)
                                                {
                                                    // Render placeholder để giữ nguyên vị trí
                                                    <div class="seat empty"></div>
                                                }
                                                else
                                                {
                                                    <div class="seat @(isBooked ? "booked" : "")"
                                                         data-seat-id="@seat.SeatId"
                                                         data-seat-name="@seat.SeatName"
                                                         data-seat-type="@seatType?.TypeName"
                                                         data-seat-price="@calculatedPrice"
                                                         data-base-price="@(basePrice )"
                                                         data-version-multi="@versionMulti"
                                                         data-seat-color="@(seatType?.ColorHex ?? "#cccbc8")"
                                                         style="background-color:@(seatType?.ColorHex ?? "#cccbc8")"
                                                         @(coupleSeatPairs.ContainsKey(seat.SeatId) ? "data-couple-seat=true" : "")
                                                         @(isBooked ? "" : "onclick=selectSeat(this)")>
                                                        <div class="seat-inner">
                                                            <span class="seat-number">@seat.SeatName</span>
                                                            @if (coupleSeatPairs.ContainsKey(seat.SeatId))
                                                            {
                                                                <span class="couple-indicator">❤️</span>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                                // Nếu là ghế Disabled thì không render gì cả
                                            }

                                            else

                                            {
                                                <div class="seat empty"></div>
                                            }

                                        }
                                    </div>
                                    <div class="row-label">@((char)('A' + row - 1))</div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Seat Legend -->
                    <div class="seat-legend">
                        @foreach (var type in seatTypes.Where(t => t.TypeName != "Disabled"))

                        {
                            <div class="legend-item">
                                <div class="legend-color" style="background-color: @(type.ColorHex ?? "#FFFFFF")"></div>
                                <span>@type.TypeName</span>
                            </div>
                        }
                        <div class="legend-item">
                            <div class="legend-color" style="background-color: #10b981"></div>
                            <span>Selected</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-color" style="background-color: #cccbc8; filter: brightness(0.3) saturate(0.5); position: relative;">
                                <span style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: #dc2626; font-weight: bold; font-size: 0.8rem; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);">✗</span>
                            </div>
                            <span>Booked</span>
                        </div>
                       
                        <div class="legend-item">
                            <div class="legend-color" style="background-color: #f59e42"></div>
                            <span>Being Held</span>
                        </div>
                    </div>
                </div>

                <!-- Food Selection Area -->
                <div class="food-selection-section" id="foodSelectionArea" style="display:none;">
                    <div class="section-header">
                        <h2>Choose Your Snacks</h2>
                        <button id="backToSeatBtn" class="back-to-seat-btn">
                            <span class="material-icons">arrow_back</span>
                            Back to Seats
                        </button>
                    </div>

                    <div class="food-grid">
                        @if (ViewBag.Foods != null)

                        {

                            foreach (var food in (List<MovieTheater.ViewModels.FoodViewModel>)ViewBag.Foods)

                            {
                                <div class="food-item" data-food-id="@food.FoodId">
                                    <div class="food-image">
                                        <img src="@food.Image" alt="@food.Name" />
                                    </div>
                                    <div class="food-info">
                                        <h3 class="food-name">@food.Name</h3>
                                        <p class="food-description">@food.Description</p>
                                        <div class="food-price">@food.Price.ToString("N0") VND</div>
                                        <div class="quantity-control">
                                            <button class="qty-btn minus" data-food-id="@food.FoodId">-</button>
                                            <input type="text" class="qty-input" data-food-id="@food.FoodId" value="0" readonly />
                                            <button class="qty-btn plus" data-food-id="@food.FoodId">+</button>
                                        </div>
                                    </div>
                                </div>
                            }

                        }
                    </div>
                </div>
            </div>

            <!-- Booking Summary Sidebar -->
            <div class="booking-sidebar">
                <div class="sidebar-content">
                    <!-- Show Info -->
                    <div class="show-info">
                        <div class="cinema-room">@Model.CinemaRoomName</div>
                        <div class="show-datetime">
                            <span class="show-date">@date.ToString("MMM dd, yyyy")</span>
                            <span class="show-time">@time</span>
                        </div>
                    </div>

                    <!-- Movie Title -->
                    <div class="sidebar-movie-title">@Model.MovieName</div>

                    <!-- Booking Summary -->
                    <div class="booking-summary" id="summarySeatBlock">
                        <div id="noSeatAlert" class="no-seat-alert">
                            <span class="material-icons">event_seat</span>
                            <p>Please select your seats</p>
                        </div>

                        <div id="seatInfo" class="seat-info" style="display:none;">
                            <div class="summary-item">
                                <span class="label">Seats:</span>
                                <span class="value" id="selectedSeatNames"></span>
                            </div>
                            <div class="summary-item">
                                <span class="label">Seat Total:</span>
                                <span class="value"><span id="totalPrice">0</span> VND</span>
                            </div>
                            <div class="summary-item">
                                <span class="label">Food Total:</span>
                                <span class="value"><span id="totalFoodPrice">0</span> VND</span>
                            </div>
                            <div class="food-list">
                                <span class="label">Selected Food:</span>
                                <ul id="selectedFoodList">
                                    <li class="no-food">No food selected</li>
                                </ul>
                            </div>
                            <div class="total-amount">
                                <span class="label">Total:</span>
                                <span class="amount" id="grandTotal">0 VND</span>
                            </div>
                            <div id="countdownTimer" class="countdown"></div>
                        </div>
                    </div>

                    <!-- Continue Button -->
                    @if (!string.IsNullOrEmpty(time))

                    {
                        <button id="bookButton" class="continue-btn" disabled>
                            <span class="btn-text">Continue</span>
                            <span class="material-icons">arrow_forward</span>
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Login Modal (if not authenticated) -->
@if (!isAuthenticated)

{
    <div class="login-modal-overlay">
        <div class="login-modal">
            <div class="modal-icon">
                <span class="material-icons">login</span>
            </div>
            <h3>Login Required</h3>
            <p>Please log in to select seats and book tickets.</p>
            <a href="@Url.Action("Login", "Account")" class="login-btn">
                <span class="material-icons">login</span>
                Go to Login
            </a>
        </div>
    </div>
}

<!-- Account In Use Modal -->
<div id="accountInUseModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <div class="modal-icon warning">
            <span class="material-icons">warning</span>
        </div>
        <h3>Account In Use</h3>
        <p>This account is currently being used to book tickets for this showtime on another device.</p>
        <div class="modal-actions">
            <a href="@Url.Action("Index", "Home")" class="btn secondary">
                <span class="material-icons">home</span>
                Home
            </a>
                            <a href="/#booking-widget" class="btn primary">
                <span class="material-icons">refresh</span>
                Try Again
            </a>
        </div>
    </div>
</div>

<!-- Timeout Modal -->
<div id="timeoutModal" class="modal-overlay" style="display:none;">
    <div class="modal-content timeout-modal">
        <div class="modal-icon timeout">
            <span class="material-icons">timer_off</span>
        </div>
        <h3>Time Expired</h3>
        <p>Your seat selection time has expired. Please select your seats again.</p>
        <div class="modal-actions">
            <a href="https://localhost:7201/Booking/TicketBooking" class="btn primary">
                <span class="material-icons">refresh</span>
                Return to Booking
            </a>
        </div>
    </div>
</div>

<!-- Pass data from Razor to JavaScript -->
<script>
    // Set global variables for the JavaScript file to use
    window.coupleSeatPairs = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(coupleSeatPairs));
    window.movieShowId = @(ViewBag.MovieShow != null ? ViewBag.MovieShow.MovieShowId : 0);
    window.isAdminSell = @isAdminSell.ToString().ToLower();
    window.movieId = '@movieId';
    window.showDate = '@date.ToString("yyyy-MM-dd")';
    window.showTime = '@time';
    
    // Initialize food prices
    window.foodPrices = {};
    @if (ViewBag.Foods != null)
    {
        foreach(var food in (List<MovieTheater.ViewModels.FoodViewModel>)ViewBag.Foods)
        {
            <text>window.foodPrices[@food.FoodId] = @food.Price;</text>
        }
    }
</script>

<!-- Include the JavaScript file -->
<script src="~/js/seat-view.js" asp-append-version="true"></script>
