@{
    ViewData["Title"] = "QR Code Scanner";
}

<style>
    .scanner-container {
        background: #f8f9fa;
        min-height: 100vh;
        padding: 0.5rem 0;
    }
    .scanner-card {
        margin-top: 2rem;
        margin-bottom: 2rem;
        background: #fff;
        border-radius: 20px;
        box-shadow: 0 4px 24px rgba(0,0,0,0.08);
    }
    .scanner-header {
        background: #007bff;
        color: #fff;
        padding: 2rem;
        text-align: center;
        border-radius: 20px 20px 0 0;
    }
    .scanner-header h2 {
        margin: 0;
        font-weight: 700;
        font-size: 1.7rem;
        letter-spacing: 1px;
    }
    .scanner-header p {
        color: #e3e3e3;
        font-size: 1rem;
        margin-bottom: 0;
    }
    .scanner-body {
        padding: 2rem;
    }
    #video-container {
        position: relative;
        width: 280px;
        height: 380px;
        background: #e9ecef;
        border-radius: 15px;
        overflow: hidden;
        margin: 0 auto 1.5rem auto;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        display: flex;
        align-items: center;
        justify-content: center;
    }
    #video {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 15px;
    }
    .scanner-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 180px;
        height: 180px;
        border: 3px solid #28a745;
        border-radius: 15px;
        pointer-events: none;
        box-shadow: 0 0 0 2px #fff, 0 0 12px 2px #28a74544;
        background: transparent;
    }
    .manual-input {
        background: #fff;
        border-radius: 10px;
        padding: 1.5rem 1rem 1rem 1rem;
        margin-top: 1.5rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.03);
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }
    .manual-input h6 {
        color: #007bff;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    .result-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    }
    .result-content {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        max-width: 500px;
        width: 90%;
        text-align: center;
        animation: slideIn 0.3s ease;
        box-shadow: 0 4px 24px rgba(0,0,0,0.12);
    }
    .success-icon {
        font-size: 4rem;
        color: #28a745;
        margin-bottom: 1rem;
    }
    .error-icon {
        font-size: 4rem;
        color: #dc3545;
        margin-bottom: 1rem;
    }
    .ticket-info {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 1rem;
        margin: 1rem 0;
        text-align: left;
    }
    .ticket-info p {
        margin: 0.5rem 0;
        font-size: 0.95rem;
    }
    .ticket-info strong {
        color: #495057;
    }
    .loading-spinner {
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10;
    }
    .loading-spinner .spinner-border {
        width: 3rem;
        height: 3rem;
        color: #28a745;
    }
    @@media (max-width: 600px) {
        .scanner-card, .result-content {
            padding: 0.5rem !important;
        }
        .scanner-header, .result-header {
            padding: 0.5rem !important;
        }
        #video-container {
            height: 140px;
        }
        .scanner-card {
            margin-top: 0.5rem;
            margin-bottom: 0.5rem;
        }
    }
</style>

<div class="scanner-container">
    <div class="scanner-card">
        <div class="scanner-header">
            <h2>üé´ QR Ticket Scanner</h2>
            <p class="mb-0">Scan the QR code on the ticket to check-in customer</p>
        </div>
        <div class="scanner-body">
            <div id="video-container">
                <video id="video" autoplay></video>
                <div class="scanner-overlay"></div>
                <div class="loading-spinner" id="loadingSpinner">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
            <div class="text-center">
                <button id="startScan" class="btn btn-success btn-lg me-2">
                    <i class="fas fa-camera me-2"></i>Start Scanning
                </button>
                <button id="stopScan" class="btn btn-secondary btn-lg" style="display: none;">
                    <i class="fas fa-stop me-2"></i>Stop
                </button>
            </div>
            <div class="manual-input mt-4">
                <h6 class="text-center mb-3">üìù Manual Entry</h6>
                <div class="input-group">
                    <input type="text" id="manualInvoiceId" class="form-control" placeholder="Enter Invoice ID">
                    <button id="verifyManual" class="btn btn-primary">
                        <i class="fas fa-check me-1"></i>Verify
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Result Modal -->
<div id="resultModal" class="result-modal">
    <div class="result-content">
        <div id="resultIcon"></div>
        <h4 id="resultTitle"></h4>
        <p id="resultMessage"></p>
        <div id="ticketInfo" class="ticket-info" style="display: none;"></div>
        <button id="confirmCheckIn" class="btn btn-success mt-2" style="display:none;">X√°c nh·∫≠n Check-in</button>
        <button id="closeModal" class="btn btn-primary mt-3">Close</button>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js"></script>
<script>
    let videoStream = null;
    let scanning = false;
    let lastInvoiceId = null;

    function initQrScannerTab() {
        const startBtn = document.getElementById('startScan');
        const stopBtn = document.getElementById('stopScan');
        const video = document.getElementById('video');
        const manualBtn = document.getElementById('verifyManual');
        const manualInput = document.getElementById('manualInvoiceId');

        function showLoading(show) {
            const spinner = document.getElementById('loadingSpinner');
            spinner.style.display = show ? 'block' : 'none';
        }

        // Start scanner
        startBtn.addEventListener('click', async function() {
            showLoading(true);
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ 
                    video: { facingMode: 'environment' } 
                });
                video.srcObject = stream;
                videoStream = stream;
                scanning = true;
                startBtn.style.display = 'none';
                stopBtn.style.display = 'inline-block';
                showLoading(false);
                scanQRCode();
            } catch (error) {
                showLoading(false);
                showResult('error', 'Camera Error', 'Unable to access camera. Please check device permissions.');
            }
        });

        // Stop scanner
        stopBtn.addEventListener('click', function() {
            if (videoStream) {
                videoStream.getTracks().forEach(track => track.stop());
                videoStream = null;
            }
            scanning = false;
            startBtn.style.display = 'inline-block';
            stopBtn.style.display = 'none';
        });

        // Manual verification
        manualBtn.addEventListener('click', function() {
            const invoiceId = manualInput.value.trim();
            if (invoiceId) {
                redirectToTicketInfo(invoiceId);
            } else {
                showResult('error', 'Invalid Input', 'Please enter a valid Invoice ID.');
            }
        });

        // Close modal
        document.getElementById('closeModal').addEventListener('click', function() {
            document.getElementById('resultModal').style.display = 'none';
        });

        // Enter key for manual input
        manualInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                manualBtn.click();
            }
        });
    }

    // G·ªçi l·∫°i h√†m kh·ªüi t·∫°o m·ªói khi tab QRCode ƒë∆∞·ª£c load
    $(document).on('tabContentLoaded', function(e, tabName) {
        if (tabName === 'QRCode') {
            initQrScannerTab();
        }
    });
    // N·∫øu load full page (tr∆∞·ªùng h·ª£p F5), v·∫´n kh·ªüi t·∫°o
    if (document.getElementById('startScan')) {
        initQrScannerTab();
    }

    function scanQRCode() {
        if (!scanning) return;
        const video = document.getElementById('video');
        const canvas = document.createElement('canvas');
        const context = canvas.getContext('2d');
        if (video.videoWidth === 0) {
            setTimeout(scanQRCode, 100);
            return;
        }
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        context.drawImage(video, 0, 0, canvas.width, canvas.height);
        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
        const code = jsQR(imageData.data, imageData.width, imageData.height);
        if (code) {
            try {
                const url = new URL(code.data);
                const invoiceId = url.searchParams.get('invoiceId');
                if (invoiceId) {
                    redirectToTicketInfo(invoiceId);
                    return;
                }
            } catch (e) {
                if (code.data) {
                    redirectToTicketInfo(code.data);
                    return;
                }
            }
        }
        setTimeout(scanQRCode, 100);
    }

    function redirectToTicketInfo(invoiceId) {
        lastInvoiceId = invoiceId;
        fetch(`/QRCode/GetTicketInfo?invoiceId=${invoiceId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showResult('success', 'Ticket Found', 'Ticket information retrieved successfully.', data.ticketInfo);
                } else {
                    window.location.href = `/Booking/TicketInfo?invoiceId=${invoiceId}`;
                }
            })
            .catch(error => {
                window.location.href = `/Booking/TicketInfo?invoiceId=${invoiceId}`;
            });
    }

    function showResult(type, title, message, ticketInfo = null) {
        const modal = document.getElementById('resultModal');
        const icon = document.getElementById('resultIcon');
        const titleEl = document.getElementById('resultTitle');
        const messageEl = document.getElementById('resultMessage');
        const ticketInfoEl = document.getElementById('ticketInfo');
        const confirmBtn = document.getElementById('confirmCheckIn');
        if (type === 'success') {
            icon.innerHTML = '<i class="fas fa-check-circle success-icon"></i>';
            titleEl.className = 'text-success';
        } else {
            icon.innerHTML = '<i class="fas fa-times-circle error-icon"></i>';
            titleEl.className = 'text-danger';
        }
        titleEl.textContent = title;
        messageEl.textContent = message;
        if (ticketInfo) {
            ticketInfoEl.style.display = 'block';
            ticketInfoEl.innerHTML = `
                <p><strong>Invoice ID:</strong> ${ticketInfo.invoiceId}</p>
                <p><strong>Movie:</strong> ${ticketInfo.movieName}</p>
                <p><strong>Date:</strong> ${ticketInfo.showDate}</p>
                <p><strong>Time:</strong> ${ticketInfo.showTime}</p>
                <p><strong>Customer:</strong> ${ticketInfo.customerName}</p>
                <p><strong>Phone:</strong> ${ticketInfo.customerPhone}</p>
                <p><strong>Seats:</strong> ${ticketInfo.seats.map(s => s.seatName).join(', ')}</p>
                <p><strong>Amount:</strong> ${ticketInfo.totalAmount}</p>
                <p><strong>Status:</strong> ${ticketInfo.status === 'Completed' ? 'Paid' : 'Unpaid'}</p>
                <p><strong>Checked-in:</strong> ${ticketInfo.isUsed ? 'Checked-in' : 'Not yet'}</p>
            `;
            if(ticketInfo.status === 'Completed' && !ticketInfo.isUsed) {
                confirmBtn.style.display = 'inline-block';
            } else {
                confirmBtn.style.display = 'none';
            }
        } else {
            ticketInfoEl.style.display = 'none';
            confirmBtn.style.display = 'none';
        }
        modal.style.display = 'flex';
        if (type === 'success') {
            setTimeout(() => {
                modal.style.display = 'none';
            }, 5000);
        }
    }
    document.getElementById('confirmCheckIn').onclick = async function() {
        if (!lastInvoiceId) return;
        this.disabled = true;
        this.textContent = 'ƒêang x√°c nh·∫≠n...';
        try {
            const response = await fetch('/QRCode/ConfirmCheckIn', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ invoiceId: lastInvoiceId })
            });
            const result = await response.json();
            if(result.success) {
                showResult('success', 'Check-in th√†nh c√¥ng', result.message);
            } else {
                showResult('error', 'Check-in th·∫•t b·∫°i', result.message);
            }
        } catch (e) {
            showResult('error', 'L·ªói h·ªá th·ªëng', 'Kh√¥ng th·ªÉ x√°c nh·∫≠n check-in.');
        }
        this.disabled = false;
        this.textContent = 'X√°c nh·∫≠n Check-in';
    };
</script> 