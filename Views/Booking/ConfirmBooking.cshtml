@model MovieTheater.ViewModels.ConfirmBookingViewModel

<div class="container mt-4">
    <h2 class="text-center mb-4">Confirm Your Booking</h2>

    <div class="card shadow p-4">

        @* === Thông tin người dùng & phim chia 2 cột === *@
        <div class="row">
            <div class="col-md-6">
                <h5>Movie & Show Info</h5>
                <p><strong>Movie:</strong> @Model.MovieName</p>
                <p><strong>Screen:</strong> @Model.CinemaRoomName</p>
                <p><strong>Date:</strong> @Model.ShowDate.ToString("yyyy-MM-dd")</p>
                <p><strong>Time:</strong> @Model.ShowTime</p>
            </div>
            <div class="col-md-6">
                <h5>Your Information</h5>
                <p><strong>Full Name:</strong> @Model.FullName</p>
                <p><strong>Email:</strong> @Model.Email</p>
                <p><strong>Identity Card:</strong> @Model.IdentityCard</p>
                <p><strong>Phone Number:</strong> @Model.PhoneNumber</p>
                <p><strong>Score:</strong> <span id="currentScore">@Model.CurrentScore</span> pts</p>
            </div>
        </div>

        <hr />

        @* === Danh sách ghế === *@
        <h5 class="mb-3">Seat(s)</h5>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Seat</th>
                    <th>Type</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var seat in Model.SelectedSeats)
                {
                    <tr>
                        <td>@seat.SeatName</td>
                        <td>@seat.SeatType</td>
                        <td>
                            @if (seat.OriginalPrice.HasValue && seat.PromotionDiscount.HasValue && seat.PromotionDiscount.Value > 0)
                            {
                                <span style="text-decoration: line-through; color: #888;">@seat.OriginalPrice.Value.ToString("N0") VND</span>
                              
                                <span style="color: #1a7f37; font-weight: bold;">@seat.PriceAfterPromotion.Value.ToString("N0") VND</span>
                            }
                            else
                            {
                                <span style="color: #1a7f37; font-weight: bold;">@seat.Price.ToString("N0") VND</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @* === Nhập Use Score & tổng tiền === *@
        <div class="row mt-4 align-items-center">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="useScore"><strong>Points to use (1 point = 1,000 VND):</strong></label>
                    <input asp-for="UseScore" type="number" class="form-control" id="useScore" min="0" value="0" />
                    <div class="text-muted mt-1">Max usable: <span id="maxUsablePoints">(calculated)</span> | <span id="pointsEarnedPreview" class="text-success">You will earn 0 points from this transaction</span></div>
                    <div id="pointValidation" class="text-danger mt-1"></div>
                    <div id="pointSavings" class="text-success mt-1"></div>
                </div>
            </div>
            <div class="col-md-6 text-end">
                <table class="table table-borderless table-sm" style="max-width: 350px; margin-left: auto;">
                    <tbody>
                        <tr>
                            <td class="text-start">Original Price:</td>
                            <td><span id="originalTotal">@Model.Subtotal.ToString("N0") VND</span></td>
                        </tr>
                        <tr id="rankDiscountRow" style="display:none;">
                            <td class="text-start">Rank discount:</td>
                            <td id="rankDiscountDisplay"></td>
                        </tr>
                        <tr id="pointsUsedRow" style="display:none;">
                            <td class="text-start">Points Used:</td>
                            <td id="pointsUsedDisplay">-0 VND</td>
                        </tr>
                        <tr style="border-top: 1px solid #dee2e6;">
                            <td class="text-start pt-2"><strong>Total Price:</strong></td>
                            <td id="totalPriceDisplay" class="pt-2"><strong>@Model.TotalPrice.ToString("N0") VND</strong></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <hr />
        <form asp-action="Confirm" method="post" id="confirmForm">
            @Html.HiddenFor(m => m.MovieId)
            @Html.HiddenFor(m => m.MovieName)
            @Html.HiddenFor(m => m.CinemaRoomName)
            @Html.HiddenFor(m => m.ShowDate)
            @Html.HiddenFor(m => m.ShowTime)
            @Html.HiddenFor(m => m.TotalPrice)
            @Html.HiddenFor(m => m.FullName)
            @Html.HiddenFor(m => m.Email)
            @Html.HiddenFor(m => m.IdentityCard)
            @Html.HiddenFor(m => m.PhoneNumber)
            @Html.HiddenFor(m => m.CurrentScore)
            @Html.HiddenFor(m => m.MovieShowId)
            <input type="hidden" name="UseScore" id="hiddenUseScore" value="0" />
            <input type="hidden" name="IsTestSuccess" id="isTestSuccess" value="false" />
            @for (int i = 0; i < Model.SelectedSeats.Count; i++)
            {
                <input type="hidden" name="SelectedSeats[@i].SeatName" value="@Model.SelectedSeats[i].SeatName" />
                <input type="hidden" name="SelectedSeats[@i].SeatType" value="@Model.SelectedSeats[i].SeatType" />
                <input type="hidden" name="SelectedSeats[@i].Price" value="@Model.SelectedSeats[i].Price" />
                <input type="hidden" name="SelectedSeats[@i].SeatId" value="@Model.SelectedSeats[i].SeatId" />
            }
            <div class="text-center mt-4">
                
                <button type="button" class="btn btn-success ms-2" onclick="testSuccess()">Confirm Booking</button>
            </div>
        </form>
    </div>
</div>

<style>
    button:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
</style>

<script>
    $(document).ready(function () {
        // Values from server
        var originalTotal = @Model.Subtotal;
        var discountPercent = @Model.RankDiscountPercent;
        var earningRate = @Model.EarningRate;
        var currentScore = @Model.CurrentScore;
        var pointValue = 1000;

        function updateMaxUsablePoints(discountedTotal) {
            var maxPoints = Math.floor((discountedTotal * 0.9) / pointValue);
            maxPoints = Math.min(maxPoints, currentScore);
            $('#maxUsablePoints').text(maxPoints);
            return maxPoints;
        }

        function updatePriceWithDiscount(discountPercent) {
            var discountAmount = Math.round(originalTotal * (discountPercent / 100));
            var discountedTotal = originalTotal - discountAmount;
            var useScore = parseInt($('#useScore').val()) || 0;
            var maxUsablePoints = updateMaxUsablePoints(discountedTotal);
            var valid = true;
            var validationMsg = '';
            if (useScore === 0) {
                validationMsg = '';
                valid = true;
            } else if (useScore < 20) {
                validationMsg = 'Minimum 20 points required.';
                valid = false;
            } else if (useScore > maxUsablePoints) {
                validationMsg = `You can use up to ${maxUsablePoints} points for this order.`;
                valid = false;
            }
            // Rank discount row
            if (discountPercent > 0) {
                $('#rankDiscountRow').show();
                $('#rankDiscountDisplay').text(`-${discountAmount.toLocaleString()} VND (${discountPercent}%)`);
            } else {
                $('#rankDiscountRow').hide();
            }
            // Points used row
            const pointsUsedRow = document.getElementById('pointsUsedRow');
            const pointsUsedDisplay = document.getElementById('pointsUsedDisplay');
            if (useScore > 0 && valid) {
                pointsUsedDisplay.textContent = `-${(useScore * pointValue).toLocaleString()} VND`;
                pointsUsedRow.style.display = '';
            } else {
                pointsUsedRow.style.display = 'none';
            }
            // Final total
            var savings = useScore * pointValue;
            var finalTotal = discountedTotal;
            if (valid && useScore > 0) {
                finalTotal = discountedTotal - savings;
                if (finalTotal < 0) finalTotal = 0;
            }
            $('#totalPriceDisplay').html(`<strong>${finalTotal.toLocaleString()} VND</strong>`);
            // Point earning preview (always show)
            var pointsToEarn = 0;
            if (valid) {
                pointsToEarn = Math.round((useScore > 0 ? finalTotal : discountedTotal) * earningRate / 100 / pointValue);
            }
            $('#pointsEarnedPreview').text(`You will earn ${pointsToEarn} point${pointsToEarn === 1 ? '' : 's'} from this transaction`).addClass('text-success').show();
            // Savings
            if (valid && useScore > 0) {
                $('#pointSavings').text(`Using ${useScore} points saves you ${savings.toLocaleString()} VND`);
            } else {
                $('#pointSavings').text('');
            }
            // Validation
            $('#pointValidation').text(validationMsg);
            $('#confirmBtn').prop('disabled', !valid);
            $('#hiddenUseScore').val(valid ? useScore : 0);
            // Price display
            if (discountPercent > 0) {
                $('#originalTotal').css({'color':'#888','font-size':'1.1em'}).text(originalTotal.toLocaleString() + ' VND');
                if (valid && useScore > 0) {
                    $('#discountedTotal').show().css({'font-size':'1.3em','font-weight':'bold','color':'#1a7f37'}).text(finalTotal.toLocaleString() + ' VND');
                } else {
                    $('#discountedTotal').show().css({'font-size':'1.3em','font-weight':'bold','color':'#1a7f37'}).text((discountedTotal).toLocaleString() + ' VND');
                }
            } else {
                $('#originalTotal').css({'text-decoration':'none','color':'#1a7f37','font-size':'1.3em'}).text(originalTotal.toLocaleString() + ' VND');
                $('#discountedTotal').hide();
            }
        }
        $('#useScore').on('input', function () {
            updatePriceWithDiscount(discountPercent);
        });
        // Initial state
        updatePriceWithDiscount(discountPercent);
    });
    function testSuccess() {
        var useScoreInput = document.getElementById('useScore');
        var hiddenUseScore = document.getElementById('hiddenUseScore');
        var isTestSuccess = document.getElementById('isTestSuccess');
        if (useScoreInput && hiddenUseScore) {
            hiddenUseScore.value = useScoreInput.value || 0;
        }
        if (isTestSuccess) {
            isTestSuccess.value = "true";
        }
        document.querySelector('form[method="post"]').submit();
    }
</script>
